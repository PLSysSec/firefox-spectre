!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
ALLOW_MISSING_POS	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const ALLOW_MISSING_POS    = 1 << 33;$/;"	c
ALLOW_NEG_NUMS	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const ALLOW_NEG_NUMS       = 1 << 27;$/;"	c
ALLOW_TAC_VALS	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const ALLOW_TAC_VALS   = 1 << 12;$/;"	c
ALLOW_UNK_SC	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const ALLOW_UNK_SC         = 1 << 15;$/;"	c
ARGS_NEGATE_SCS	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const ARGS_NEGATE_SCS      = 1 << 31;$/;"	c
ARGS_OVERRIDE_SELF	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const ARGS_OVERRIDE_SELF   = 1 << 40;$/;"	c
A_REQUIRED_ELSE_HELP	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const A_REQUIRED_ELSE_HELP = 1 << 2;$/;"	c
AliasDatatype	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub struct AliasDatatype {$/;"	s
AnyArg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^pub trait AnyArg<'n, 'e>: std_fmt::Display {$/;"	t
App	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^pub struct App<'a, 'b>$/;"	s
AppFlags	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^pub struct AppFlags(Flags);$/;"	s
AppMeta	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/meta.rs	/^pub struct AppMeta<'b> {$/;"	s
AppSettings	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^pub enum AppSettings {$/;"	g
Arg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^pub struct Arg<'a, 'b>$/;"	s
ArgEnum	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/lib.rs	/^    pub trait ArgEnum {}$/;"	t
ArgFlags	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^pub struct ArgFlags(Flags);$/;"	s
ArgGroup	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^pub struct ArgGroup<'a> {$/;"	s
ArgMatcher	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^pub struct ArgMatcher<'a>(pub ArgMatches<'a>);$/;"	s
ArgMatches	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^pub struct ArgMatches<'a> {$/;"	s
ArgSettings	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^pub enum ArgSettings {$/;"	g
ArgWithDisplay	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^trait ArgWithDisplay<'b, 'c>: AnyArg<'b, 'c> + Display {}$/;"	t
ArgWithOrder	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^trait ArgWithOrder<'b, 'c>: ArgWithDisplay<'b, 'c> + DispOrder {$/;"	t
AsFail	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/as_fail.rs	/^pub trait AsFail {$/;"	t
AtInterface	/home/sunfish/WASI/tools/witx/src/parser.rs	/^struct AtInterface;$/;"	s
AtWitx	/home/sunfish/WASI/tools/witx/src/parser.rs	/^struct AtWitx;$/;"	s
AtomType	/home/sunfish/WASI/tools/witx/src/coretypes.rs	/^pub enum AtomType {$/;"	g
Backtrace	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs	/^    pub struct Backtrace {$/;"	s
Base	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/base.rs	/^pub struct Base<'a, 'b>$/;"	s
BashGen	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/bash.rs	/^pub struct BashGen<'a, 'b>$/;"	s
BlockType	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^pub struct BlockType<'a> {$/;"	s
BoxStd	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/box_std.rs	/^pub struct BoxStd(pub Box<Error + Send + Sync + 'static>);$/;"	s
BrTableIndices	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^pub struct BrTableIndices<'a> {$/;"	s
BuiltinType	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub enum BuiltinType {$/;"	g
CASE_INSENSITIVE	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const CASE_INSENSITIVE = 1 << 16;$/;"	c
COLORED_HELP	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const COLORED_HELP         = 1 << 22;$/;"	c
COLOR_ALWAYS	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const COLOR_ALWAYS         = 1 << 23;$/;"	c
COLOR_AUTO	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const COLOR_AUTO           = 1 << 24;$/;"	c
COLOR_NEVER	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const COLOR_NEVER          = 1 << 25;$/;"	c
CONTAINS_LAST	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const CONTAINS_LAST        = 1 << 39;$/;"	c
CallIndirect	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^pub struct CallIndirect<'a> {$/;"	s
CargoAuthors	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^        struct CargoAuthors { __private_field: () };$/;"	s
Causes	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^pub struct Causes<'f> {$/;"	s
ClapApp	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/lib.rs	/^    pub trait ClapApp: IntoApp + FromArgMatches + Sized {$/;"	t
ColorWhen	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^pub enum ColorWhen {$/;"	g
Colorizer	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^pub struct Colorizer {$/;"	s
ColorizerOption	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^pub struct ColorizerOption {$/;"	s
Comment	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^pub enum Comment<'a> {$/;"	g
Compat	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/compat.rs	/^pub struct Compat<E> {$/;"	s
ComplGen	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/mod.rs	/^pub struct ComplGen<'a, 'b>$/;"	s
Context	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/context.rs	/^    pub struct Context<D: Display + Send + Sync + 'static> {$/;"	s
CopyUntilResult	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^enum CopyUntilResult {$/;"	g
CoreFuncType	/home/sunfish/WASI/tools/witx/src/coretypes.rs	/^pub struct CoreFuncType {$/;"	s
CoreParamSignifies	/home/sunfish/WASI/tools/witx/src/coretypes.rs	/^pub enum CoreParamSignifies {$/;"	g
CoreParamType	/home/sunfish/WASI/tools/witx/src/coretypes.rs	/^pub struct CoreParamType {$/;"	s
Cursor	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^pub struct Cursor<'a> {$/;"	s
DELIM_NOT_SET	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const DELIM_NOT_SET    = 1 << 10;$/;"	c
DERIVE_DISP_ORDER	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const DERIVE_DISP_ORDER    = 1 << 21;$/;"	c
DISABLE_HELP_FLAGS	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const DISABLE_HELP_FLAGS   = 1 << 41;$/;"	c
DISABLE_HELP_SC	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const DISABLE_HELP_SC      = 1 << 29;$/;"	c
DISABLE_VERSION	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const DISABLE_VERSION      = 1 << 11;$/;"	c
DONT_COLLAPSE_ARGS	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const DONT_COLLAPSE_ARGS   = 1 << 30;$/;"	c
DONT_DELIM_TRAIL	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const DONT_DELIM_TRAIL     = 1 << 26;$/;"	c
Data	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/memory.rs	/^pub struct Data<'a> {$/;"	s
DataKind	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/memory.rs	/^pub enum DataKind<'a> {$/;"	g
Datatype	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub struct Datatype {$/;"	s
DatatypeIdent	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub enum DatatypeIdent {$/;"	g
DatatypeIdentSyntax	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub enum DatatypeIdentSyntax<'a> {$/;"	g
DatatypePassedBy	/home/sunfish/WASI/tools/witx/src/coretypes.rs	/^pub enum DatatypePassedBy {$/;"	g
DatatypeVariant	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub enum DatatypeVariant {$/;"	g
DeclSyntax	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub enum DeclSyntax<'a> {$/;"	g
Definition	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub enum Definition {$/;"	g
DispOrder	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^pub trait DispOrder {$/;"	t
DocValidation	/home/sunfish/WASI/tools/witx/src/validate.rs	/^pub struct DocValidation {$/;"	s
DocValidationScope	/home/sunfish/WASI/tools/witx/src/validate.rs	/^pub struct DocValidationScope<'a> {$/;"	s
Document	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub struct Document {$/;"	s
EMPTY	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^        static EMPTY: [OsString; 0] = [];$/;"	c
EMPTY	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^        static EMPTY: [usize; 0] = [];$/;"	c
EMPTY_VALS	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const EMPTY_VALS       = 1 << 2;$/;"	c
ENABLED	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs	/^        static ENABLED: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
Either	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/context.rs	/^    enum Either<A, B> {$/;"	g
Elem	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/table.rs	/^pub struct Elem<'a> {$/;"	s
ElemKind	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/table.rs	/^pub enum ElemKind<'a> {$/;"	g
ElvishGen	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/elvish.rs	/^pub struct ElvishGen<'a, 'b>$/;"	s
Entry	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^    pub type Entry<'a, V> = btree_map::Entry<'a, usize, V>;$/;"	T
Entry	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub enum Entry {$/;"	g
EnumDatatype	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub struct EnumDatatype {$/;"	s
EnumSyntax	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub struct EnumSyntax<'a> {$/;"	s
Err	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^    type Err = String;$/;"	T
Err	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^    type Err = String;$/;"	T
Err	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/shell.rs	/^    type Err = String;$/;"	T
Err	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^            type Err = String;$/;"	T
Error	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^pub struct Error {$/;"	s
Error	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^pub struct Error {$/;"	s
Error	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^pub struct Error {$/;"	s
Error	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lib.rs	/^pub struct Error {$/;"	s
ErrorInner	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lib.rs	/^struct ErrorInner {$/;"	s
ErrorKind	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^pub enum ErrorKind {$/;"	g
ErrorKind	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lib.rs	/^enum ErrorKind {$/;"	g
ErrorMessage	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs	/^struct ErrorMessage<D: Display + Debug + Sync + Send + 'static> {$/;"	s
Expander	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/expand.rs	/^pub struct Expander<'a> {$/;"	s
Expander	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/tyexpand.rs	/^pub struct Expander<'a> {$/;"	s
Export	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/export.rs	/^pub struct Export<'a> {$/;"	s
ExportKind	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/export.rs	/^pub enum ExportKind<'a> {$/;"	g
ExprResolver	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^struct ExprResolver<'a, 'b> {$/;"	s
Expression	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^pub struct Expression<'a> {$/;"	s
FAILURE_BACKTRACE	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs	/^const FAILURE_BACKTRACE: &str = "RUST_FAILURE_BACKTRACE";$/;"	c
Fail	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^pub trait Fail: Display + Debug + Send + Sync + 'static {$/;"	t
FailData	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl_small.rs	/^    type FailData;$/;"	T
FailData	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    type FailData;$/;"	T
Fallible	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    pub type Fallible<T> = Result<T, Error>;$/;"	T
FieldSyntax	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub struct FieldSyntax<'a> {$/;"	s
Filesystem	/home/sunfish/WASI/tools/witx/src/io.rs	/^pub struct Filesystem;$/;"	s
FishGen	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/fish.rs	/^pub struct FishGen<'a, 'b>$/;"	s
FlagBuilder	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^pub struct FlagBuilder<'n, 'e>$/;"	s
Flags	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^    struct Flags: u64 {$/;"	s
Flags	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^    struct Flags: u32 {$/;"	s
FlagsDatatype	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub struct FlagsDatatype {$/;"	s
FlagsSyntax	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub struct FlagsSyntax<'a> {$/;"	s
Float	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^pub struct Float<'a> {$/;"	s
FloatVal	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^pub enum FloatVal<'a> {$/;"	g
Format	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^pub enum Format<T> {$/;"	g
FromArgMatches	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/lib.rs	/^    pub trait FromArgMatches: Sized {$/;"	t
Func	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/func.rs	/^pub struct Func<'a> {$/;"	s
FuncKind	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/func.rs	/^pub enum FuncKind<'a> {$/;"	g
FunctionType	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/types.rs	/^pub struct FunctionType<'a> {$/;"	s
GENERAL_BACKTRACE	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs	/^const GENERAL_BACKTRACE: &str = "RUST_BACKTRACE";$/;"	c
GLOBAL	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const GLOBAL           = 1 << 3;$/;"	c
GLOBAL_VERSION	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const GLOBAL_VERSION       = 1 << 3;$/;"	c
Global	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/global.rs	/^pub struct Global<'a> {$/;"	s
GlobalKind	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/global.rs	/^pub enum GlobalKind<'a> {$/;"	g
GlobalType	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/types.rs	/^pub struct GlobalType {$/;"	s
HIDDEN	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const HIDDEN               = 1 << 12;$/;"	c
HIDDEN	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const HIDDEN           = 1 << 4;$/;"	c
HIDDEN_LONG_H	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const HIDDEN_LONG_H    = 1 << 19;$/;"	c
HIDDEN_SHORT_H	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const HIDDEN_SHORT_H   = 1 << 18;$/;"	c
HIDE_DEFAULT_VAL	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const HIDE_DEFAULT_VAL = 1 << 15;$/;"	c
HIDE_ENV_VALS	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const HIDE_ENV_VALS    = 1 << 17;$/;"	c
HIDE_POS_VALS	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const HIDE_POS_VALS    = 1 << 11;$/;"	c
Help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^pub struct Help<'a> {$/;"	s
INFER_SUBCOMMANDS	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const INFER_SUBCOMMANDS    = 1 << 38;$/;"	c
INTERNAL_ERROR_MSG	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/lib.rs	/^const INTERNAL_ERROR_MSG: &'static str = "Fatal internal error. Please consider filing a bug \\$/;"	c
INVALID_UTF8	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/lib.rs	/^const INVALID_UTF8: &'static str = "unexpected invalid UTF-8 code point";$/;"	c
Id	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^pub struct Id<'a> {$/;"	s
Id	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub struct Id(String);$/;"	s
IdentValidation	/home/sunfish/WASI/tools/witx/src/validate.rs	/^struct IdentValidation {$/;"	s
Import	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/import.rs	/^pub struct Import<'a> {$/;"	s
ImportKind	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/import.rs	/^pub enum ImportKind<'a> {$/;"	g
ImportTypeSyntax	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub enum ImportTypeSyntax {$/;"	g
Index	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^pub enum Index<'a> {$/;"	g
Indices	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^pub struct Indices<'a> { \/\/ would rather use '_, but: https:\/\/github.com\/rust-lang\/rust\/issues\/48469$/;"	s
InlineExport	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/export.rs	/^pub struct InlineExport<'a> {$/;"	s
Inner	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs	/^struct Inner<F: ?Sized + Fail> {$/;"	s
Inner	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl_small.rs	/^struct Inner {$/;"	s
Inner	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^struct Inner {$/;"	s
InnerHeader	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl_small.rs	/^struct InnerHeader {$/;"	s
InnerHeader	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^struct InnerHeader {$/;"	s
InnerRaw	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl_small.rs	/^struct InnerRaw<F> {$/;"	s
InnerRaw	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^struct InnerRaw<F> {$/;"	s
Instruction	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^        pub enum Instruction<'a> {$/;"	g
Instruction	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^    pub enum Instruction<'a> {$/;"	g
IntRepr	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub enum IntRepr {$/;"	g
Integer	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^pub struct Integer<'a> {$/;"	s
InterfaceFunc	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub struct InterfaceFunc {$/;"	s
InterfaceFuncParam	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub struct InterfaceFuncParam {$/;"	s
InterfaceFuncParamPosition	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub enum InterfaceFuncParamPosition {$/;"	g
InterfaceFuncSyntax	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub struct InterfaceFuncSyntax<'a> {$/;"	s
IntoApp	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/lib.rs	/^    pub trait IntoApp {$/;"	t
Item	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    type Item = &'a OsStr;$/;"	T
Item	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    type Item = &'a str;$/;"	T
Item	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    type Item = usize;$/;"	T
Item	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^        type Item = (usize, &'a V);$/;"	T
Item	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    type Item = &'a OsStr;$/;"	T
Item	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    type Item = &'f Fail;$/;"	T
Item	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    type Item = Result<Source<'a>, Error>;$/;"	T
Iter	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^    pub struct Iter<'a, V: 'a> {$/;"	s
LAST	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const LAST             = 1 << 14;$/;"	c
LEADING_HYPHEN	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const LEADING_HYPHEN       = 1 << 18;$/;"	c
LOW_INDEX_MUL_POS	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const LOW_INDEX_MUL_POS    = 1 << 28;$/;"	c
LParen	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^pub struct LParen {$/;"	s
LexError	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^pub enum LexError {$/;"	g
Lexer	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^pub struct Lexer<'a> {$/;"	s
Limits	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/types.rs	/^pub struct Limits {$/;"	s
Location	/home/sunfish/WASI/tools/witx/src/lib.rs	/^pub struct Location {$/;"	s
Lookahead1	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^pub struct Lookahead1<'a> {$/;"	s
MULTIPLE	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const MULTIPLE         = 1 << 1;$/;"	c
MatchedArg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/matched_arg.rs	/^pub struct MatchedArg {$/;"	s
MaybeResolved	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs	/^struct MaybeResolved {$/;"	s
MemArg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^pub struct MemArg {$/;"	s
Memory	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/memory.rs	/^pub struct Memory<'a> {$/;"	s
MemoryInit	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^pub struct MemoryInit<'a> {$/;"	s
MemoryKind	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/memory.rs	/^pub enum MemoryKind<'a> {$/;"	g
MemoryType	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/types.rs	/^pub struct MemoryType {$/;"	s
MockFs	/home/sunfish/WASI/tools/witx/src/io.rs	/^pub struct MockFs {$/;"	s
Module	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/module.rs	/^pub struct Module<'a> {$/;"	s
Module	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub struct Module {$/;"	s
ModuleDeclSyntax	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub enum ModuleDeclSyntax<'a> {$/;"	g
ModuleDefinition	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub enum ModuleDefinition {$/;"	g
ModuleEntry	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub enum ModuleEntry {$/;"	g
ModuleField	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/module.rs	/^pub enum ModuleField<'a> {$/;"	g
ModuleImport	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub struct ModuleImport {$/;"	s
ModuleImportSyntax	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub struct ModuleImportSyntax<'a> {$/;"	s
ModuleImportVariant	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub enum ModuleImportVariant {$/;"	g
ModuleKind	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/module.rs	/^pub enum ModuleKind<'a> {$/;"	g
ModuleSyntax	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub struct ModuleSyntax<'a> {$/;"	s
ModuleValidation	/home/sunfish/WASI/tools/witx/src/validate.rs	/^struct ModuleValidation<'a> {$/;"	s
NAY	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs	/^    const NAY: Option<&str> = Some("0");$/;"	c
NEEDS_LONG_HELP	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const NEEDS_LONG_HELP      = 1 << 8;$/;"	c
NEEDS_LONG_VERSION	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const NEEDS_LONG_VERSION   = 1 << 9;$/;"	c
NEEDS_SC_HELP	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const NEEDS_SC_HELP        = 1 << 10;$/;"	c
NEXT_LINE_HELP	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const NEXT_LINE_HELP       = 1 << 20;$/;"	c
NEXT_LINE_HELP	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const NEXT_LINE_HELP   = 1 << 7;$/;"	c
NOT_SET	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs	/^    const NOT_SET: Option<&str> = None;$/;"	c
NO_BIN_NAME	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const NO_BIN_NAME          = 1 << 14;$/;"	c
NO_POS_VALUES	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const NO_POS_VALUES        = 1 << 19;$/;"	c
Names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/binary.rs	/^struct Names<'a> {$/;"	s
Namespace	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^struct Namespace<'a> {$/;"	s
Ns	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^enum Ns {$/;"	g
ONCE	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^                static ONCE: Once = ONCE_INIT;$/;"	c
OptBuilder	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^pub struct OptBuilder<'n, 'e>$/;"	s
OsSplit	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^pub struct OsSplit<'a> {$/;"	s
OsStrExt2	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^pub trait OsStrExt2 {$/;"	t
OsStrExt3	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^pub trait OsStrExt3 {$/;"	t
OsValues	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^pub struct OsValues<'a> {$/;"	s
Output	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^    type Output = Self;$/;"	T
PROPAGATED	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const PROPAGATED           = 1 << 36;$/;"	c
PROPAGATE_VALS_DOWN	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const PROPAGATE_VALS_DOWN  = 1 << 32;$/;"	c
Parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^pub trait Parse<'a>: Sized {$/;"	t
ParseBuffer	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^pub struct ParseBuffer<'a> {$/;"	s
ParseResult	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^pub enum ParseResult<'a> {$/;"	g
Parser	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^pub struct Parser<'a, 'b>$/;"	s
Parser	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^pub struct Parser<'a> {$/;"	s
Peek	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^pub trait Peek {$/;"	t
PosBuilder	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^pub struct PosBuilder<'n, 'e>$/;"	s
PowerShellGen	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/powershell.rs	/^pub struct PowerShellGen<'a, 'b>$/;"	s
QuoteModule	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/wast.rs	/^pub enum QuoteModule<'a> {$/;"	g
REQUIRED	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const REQUIRED         = 1;$/;"	c
REQUIRE_EQUALS	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const REQUIRE_EQUALS   = 1 << 13;$/;"	c
REQ_DELIM	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const REQ_DELIM        = 1 << 9;$/;"	c
R_UNLESS_ALL	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const R_UNLESS_ALL     = 1 << 8;$/;"	c
Render	/home/sunfish/WASI/tools/witx/src/render.rs	/^pub trait Render {$/;"	t
Resolver	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^pub struct Resolver<'a> {$/;"	s
Result	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^pub type Result<T> = StdResult<T, Error>;$/;"	T
Result	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^pub type Result<T> = std::result::Result<T, Error>;$/;"	T
ResultExt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/result_ext.rs	/^pub trait ResultExt<T, E> {$/;"	t
SC_NEGATE_REQS	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const SC_NEGATE_REQS       = 1;$/;"	c
SC_REQUIRED	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const SC_REQUIRED          = 1 << 1;$/;"	c
SC_REQUIRED_ELSE_HELP	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const SC_REQUIRED_ELSE_HELP= 1 << 7;$/;"	c
SExpr	/home/sunfish/WASI/tools/witx/src/render.rs	/^pub enum SExpr {$/;"	g
Shell	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/shell.rs	/^pub enum Shell {$/;"	g
Source	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^pub enum Source<'a> {$/;"	g
Span	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^pub struct Span {$/;"	s
State	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^            enum State {$/;"	g
State	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^        enum State {$/;"	g
StructDatatype	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub struct StructDatatype {$/;"	s
StructMember	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub struct StructMember {$/;"	s
StructSyntax	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub struct StructSyntax<'a> {$/;"	s
SubCommand	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/subcommand.rs	/^pub struct SubCommand<'a> {$/;"	s
Switched	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/switched.rs	/^pub struct Switched<'b> {$/;"	s
SyncFailure	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/sync_failure.rs	/^pub struct SyncFailure<T> {$/;"	s
TAB	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^const TAB: &'static str = "    ";$/;"	c
TAKES_VAL	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const TAKES_VAL        = 1 << 5;$/;"	c
TRAILING_VALUES	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const TRAILING_VALUES      = 1 << 34;$/;"	c
TRAILING_VARARG	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const TRAILING_VARARG      = 1 << 13;$/;"	c
Table	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/table.rs	/^pub struct Table<'a> {$/;"	s
TableElemType	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/types.rs	/^pub enum TableElemType {$/;"	g
TableInit	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^pub struct TableInit<'a> {$/;"	s
TableKind	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/table.rs	/^pub enum TableKind<'a> {$/;"	g
TableType	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/types.rs	/^pub struct TableType {$/;"	s
Target	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^            type Target = str;$/;"	T
Text	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lib.rs	/^struct Text {$/;"	s
Token	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^pub enum Token<'a> {$/;"	g
TopLevelDocument	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub struct TopLevelDocument<'a> {$/;"	s
TopLevelSyntax	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub enum TopLevelSyntax<'a> {$/;"	g
TraitObject	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl_small.rs	/^struct TraitObject {$/;"	s
TraitObject	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^struct TraitObject {$/;"	s
Type	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/types.rs	/^pub struct Type<'a> {$/;"	s
Type	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^struct Type<'a> {$/;"	s
TypeUse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/types.rs	/^pub struct TypeUse<'a> {$/;"	s
TypedefSyntax	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub enum TypedefSyntax<'a> {$/;"	g
TypenameSyntax	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub struct TypenameSyntax<'a> {$/;"	s
UNIFIED_HELP	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const UNIFIED_HELP         = 1 << 5;$/;"	c
USE_DELIM	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^        const USE_DELIM        = 1 << 6;$/;"	c
UTF8_NONE	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const UTF8_NONE            = 1 << 17;$/;"	c
UTF8_STRICT	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const UTF8_STRICT          = 1 << 16;$/;"	c
UnionDatatype	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub struct UnionDatatype {$/;"	s
UnionSyntax	/home/sunfish/WASI/tools/witx/src/parser.rs	/^pub struct UnionSyntax<'a> {$/;"	s
UnionVariant	/home/sunfish/WASI/tools/witx/src/ast.rs	/^pub struct UnionVariant {$/;"	s
UsageParser	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^pub struct UsageParser<'a> {$/;"	s
UsageToken	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^enum UsageToken {$/;"	g
V128Const	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^pub enum V128Const {$/;"	g
V8x16Shuffle	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^pub struct V8x16Shuffle {$/;"	s
VALID_ARG_FOUND	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const VALID_ARG_FOUND      = 1 << 37;$/;"	c
VALID_NEG_NUM_FOUND	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const VALID_NEG_NUM_FOUND  = 1 << 35;$/;"	c
VERSIONLESS_SC	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const VERSIONLESS_SC       = 1 << 4;$/;"	c
VTable	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl_small.rs	/^    type VTable;$/;"	T
VTable	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    type VTable;$/;"	T
ValType	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/types.rs	/^pub enum ValType {$/;"	g
ValidationError	/home/sunfish/WASI/tools/witx/src/validate.rs	/^pub enum ValidationError {$/;"	g
Validator	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^pub struct Validator<'a, 'b, 'z>(&'z mut Parser<'a, 'b>)$/;"	s
Valued	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/valued.rs	/^pub struct Valued<'a, 'b>$/;"	s
Values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^pub struct Values<'a> {$/;"	s
Values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^    pub type Values<'a, V> = btree_map::Values<'a, usize, V>;$/;"	T
VecMap	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^    pub struct VecMap<V> {$/;"	s
WAIT_ON_ERROR	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^        const WAIT_ON_ERROR        = 1 << 6;$/;"	c
Wast	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/wast.rs	/^pub struct Wast<'a> {$/;"	s
WastDirective	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/wast.rs	/^pub enum WastDirective<'a> {$/;"	g
WastDirectiveToken	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/wast.rs	/^struct WastDirectiveToken;$/;"	s
WastExecute	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/wast.rs	/^pub enum WastExecute<'a> {$/;"	g
WastInvoke	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/wast.rs	/^pub struct WastInvoke<'a> {$/;"	s
Wat	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/module.rs	/^pub struct Wat<'a> {$/;"	s
Which	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/memory.rs	/^            enum Which<'a, T> {$/;"	g
WitxError	/home/sunfish/WASI/tools/witx/src/lib.rs	/^pub enum WitxError {$/;"	g
WitxIo	/home/sunfish/WASI/tools/witx/src/io.rs	/^pub trait WitxIo {$/;"	t
YEA	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs	/^    const YEA: Option<&str> = Some("1");$/;"	c
ZshGen	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/zsh.rs	/^pub struct ZshGen<'a, 'b>$/;"	s
_StrExt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/strext.rs	/^pub trait _StrExt {$/;"	t
__private_get_type_id__	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    fn __private_get_type_id__(&self) -> TypeId {$/;"	f
_clap_count_exprs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! _clap_count_exprs {$/;"	d
_find_by_long	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! _find_by_long {$/;"	d
_find_by_short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! _find_by_short {$/;"	d
_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn _help(&self, mut use_long: bool) -> Error {$/;"	f
_is_char_boundary	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/strext.rs	/^    fn _is_char_boundary(&self, index: usize) -> bool {$/;"	f
_is_char_boundary	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/strext.rs	/^    fn _is_char_boundary(&self, index: usize) -> bool;$/;"	f
_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! _names {$/;"	d
_parse_witx_with	/home/sunfish/WASI/tools/witx/src/toplevel.rs	/^fn _parse_witx_with(path: &Path, io: &dyn WitxIo) -> Result<Document, WitxError> {$/;"	f
_shorts_longs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! _shorts_longs {$/;"	d
_version	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn _version(&self, use_long: bool) -> Error {$/;"	f
_write_parser_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    pub fn _write_parser_help($/;"	f
about	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn about<S: Into<&'b str>>(mut self, about: S) -> Self {$/;"	f
add_arg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn add_arg(&mut self, a: Arg<'a, 'b>) {$/;"	f
add_arg_groups	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn add_arg_groups(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_arg_ref	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn add_arg_ref(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_conditional_reqs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn add_conditional_reqs(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_defaults	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn add_defaults(&mut self, matcher: &mut ArgMatcher<'a>) -> ClapResult<()> {$/;"	f
add_env	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn add_env(&mut self, matcher: &mut ArgMatcher<'a>) -> ClapResult<()> {$/;"	f
add_group	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn add_group(&mut self, group: ArgGroup<'a>) {$/;"	f
add_index_to	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn add_index_to(&mut self, arg: &'a str, idx: usize) {$/;"	f
add_reqs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn add_reqs(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_sc	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/zsh.rs	/^    fn add_sc(sc: &App, n: &str, ret: &mut Vec<String>) {$/;"	f
add_single_val_to_arg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn add_single_val_to_arg<A>($/;"	f
add_subcommand	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn add_subcommand(&mut self, mut subcmd: App<'a, 'b>) {$/;"	f
add_val	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^        macro_rules! add_val {$/;"	d
add_val_to	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn add_val_to(&mut self, arg: &'a str, val: &OsStr) {$/;"	f
add_val_to_arg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn add_val_to_arg<A>($/;"	f
advance	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    fn advance(&mut self) -> Option<&'a Token<'a>> {$/;"	f
after_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn after_help<S: Into<&'b str>>(mut self, help: S) -> Self {$/;"	f
alias	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	f
alias	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	f
aliases	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	f
aliases	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn aliases(mut self, names: &[&'b str]) -> Self {$/;"	f
aliases	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> { (*self).aliases() }$/;"	f
aliases	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>>;$/;"	f
aliases	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn aliases(mut self, names: &[&'b str]) -> Self {$/;"	f
aliases	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	f
aliases	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	f
aliases	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> { None }$/;"	f
all_options_for_path	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/bash.rs	/^    fn all_options_for_path(&self, path: &str) -> String {$/;"	f
all_subcommand_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/mod.rs	/^pub fn all_subcommand_names(p: &Parser) -> Vec<String> {$/;"	f
all_subcommands	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/bash.rs	/^    fn all_subcommands(&self) -> String {$/;"	f
all_subcommands	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/mod.rs	/^pub fn all_subcommands(p: &Parser) -> Vec<(String, String)> {$/;"	f
allow_hyphen_values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn allow_hyphen_values(self, a: bool) -> Self {$/;"	f
always_enabled_if_failure_is_set_to_yes	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs	/^    fn always_enabled_if_failure_is_set_to_yes() {$/;"	f
annot	/home/sunfish/WASI/tools/witx/src/render.rs	/^    fn annot(s: &str) -> SExpr {$/;"	f
app_debug_asserts	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn app_debug_asserts(&self) -> bool {$/;"	f
app_from_crate	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! app_from_crate {$/;"	d
app_settings_fromstr	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^    fn app_settings_fromstr() {$/;"	f
arg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn arg<A: Into<Arg<'a, 'b>>>(mut self, a: A) -> Self {$/;"	f
arg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    pub fn arg(mut self, n: &'a str) -> Self {$/;"	f
arg_enum	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! arg_enum {$/;"	d
arg_from_usage	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn arg_from_usage(mut self, usage: &'a str) -> Self {$/;"	f
arg_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn arg_names(&'a self) -> Vec<&'a str> { self.0.args.keys().map(Deref::deref).collect() }$/;"	f
arg_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! arg_names {$/;"	d
arg_names_in_group	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn arg_names_in_group(&self, group: &str) -> Vec<&'a str> {$/;"	f
arg_settings_fromstr	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^    fn arg_settings_fromstr() {$/;"	f
args	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn args(mut self, args: &[Arg<'a, 'b>]) -> Self {$/;"	f
args	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    pub fn args(mut self, ns: &[&'a str]) -> Self {$/;"	f
args_from_usage	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn args_from_usage(mut self, usage: &'a str) -> Self {$/;"	f
args_in_group	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn args_in_group(&self, group: &str) -> Vec<String> {$/;"	f
argument_conflict	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn argument_conflict<O, U>($/;"	f
argument_not_found_auto	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn argument_not_found_auto<A>(arg: A) -> Self$/;"	f
as_arg_trait	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^fn as_arg_trait<'a, 'b, T: ArgWithOrder<'a, 'b>>(x: &T) -> &ArgWithOrder<'a, 'b> {$/;"	f
as_base	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn as_base(&self) -> &ArgWithDisplay<'b, 'c> {$/;"	f
as_base	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn as_base(&self) -> &ArgWithDisplay<'b, 'c>;$/;"	f
as_bytes	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn as_bytes(&self) -> &[u8] {$/;"	f
as_bytes	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn as_bytes(&self) -> &[u8];$/;"	f
as_cause	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/context.rs	/^        fn as_cause(&self) -> Option<&Fail> {$/;"	f
as_fail	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/as_fail.rs	/^        fn as_fail(&self) -> &Fail {$/;"	f
as_fail	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/as_fail.rs	/^    fn as_fail(&self) -> &Fail {$/;"	f
as_fail	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/as_fail.rs	/^    fn as_fail(&self) -> &Fail;$/;"	f
as_fail	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    pub fn as_fail(&self) -> &Fail {$/;"	f
as_ref	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    fn as_ref(&self) -> &Fail {$/;"	f
as_str	/home/sunfish/WASI/tools/witx/src/ast.rs	/^    pub fn as_str(&self) -> &str {$/;"	f
as_trait_obj	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^            fn as_trait_obj<'a, 'b, T: AnyArg<'a, 'b>>(x: &T) -> &AnyArg<'a, 'b> { x }$/;"	f
assert_error_is_just_data	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    fn assert_error_is_just_data() {$/;"	f
assert_error_is_just_data	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    fn assert_error_is_just_data() {$/;"	f
assert_is_one_word	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl_small.rs	/^    fn assert_is_one_word() {$/;"	f
assert_is_one_word	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    fn assert_is_one_word() {$/;"	f
assert_just_data	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    fn assert_just_data<T: Send + Sync + 'static>() { }$/;"	f
assert_just_data	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^        fn assert_just_data<T: Send + Sync + 'static>() { }$/;"	f
author	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn author<S: Into<&'b str>>(mut self, author: S) -> Self {$/;"	f
backtrace	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/context.rs	/^        fn backtrace(&self) -> &Backtrace {$/;"	f
backtrace	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/context.rs	/^        fn backtrace(&self) -> Option<&Backtrace> {$/;"	f
backtrace	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    pub fn backtrace(&self) -> &Backtrace {$/;"	f
backtrace	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    fn backtrace(&self) -> Option<&Backtrace> {$/;"	f
backtrace	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    pub fn backtrace(&self) -> &Backtrace {$/;"	f
bail	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/macros.rs	/^macro_rules! bail {$/;"	d
before_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn before_help<S: Into<&'b str>>(mut self, help: S) -> Self {$/;"	f
bin_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn bin_name<S: Into<String>>(mut self, name: S) -> Self {$/;"	f
bitor	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^    fn bitor(self, rhs: Self) -> Self { AppFlags(self.0 | rhs.0) }$/;"	f
blacklist	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> { None }$/;"	f
blacklist	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> { (*self).blacklist() }$/;"	f
blacklist	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn blacklist(&self) -> Option<&[&'e str]>;$/;"	f
blacklist	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> { self.b.blacklist.as_ref().map(|o| &o[..]) }$/;"	f
blacklist	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> { self.b.blacklist.as_ref().map(|o| &o[..]) }$/;"	f
blacklist	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> { self.b.blacklist.as_ref().map(|o| &o[..]) }$/;"	f
block_comment_smoke	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn block_comment_smoke() {$/;"	f
build_bin_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn build_bin_names(&mut self) {$/;"	f
build_err	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^    fn build_err(&self, name: &str, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	f
cand	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/elvish.rs	/^    fn cand [text desc]{{$/;"	f
canonicalize	/home/sunfish/WASI/tools/witx/src/io.rs	/^    fn canonicalize(&self, path: &Path) -> Result<PathBuf, WitxError> {$/;"	f
canonicalize	/home/sunfish/WASI/tools/witx/src/io.rs	/^    fn canonicalize(&self, path: &Path) -> Result<PathBuf, WitxError>;$/;"	f
case_insensitive	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn case_insensitive(self, ci: bool) -> Self {$/;"	f
cause	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/context.rs	/^        fn cause(&self) -> Option<&Fail> {$/;"	f
cause	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    pub fn cause(&self) -> &Fail {$/;"	f
cause	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    fn cause(&self) -> Option<&Fail> {$/;"	f
cause	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    pub fn cause(&self) -> &Fail {$/;"	f
causes	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    pub fn causes(&self) -> Causes {$/;"	f
causes	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    fn causes(&self) -> Causes$/;"	f
causes	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    pub fn causes(&self) -> Causes {$/;"	f
causes	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    pub fn causes(&self) -> Causes {$/;"	f
check	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^        macro_rules! check {$/;"	d
check_for_help_and_version_char	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn check_for_help_and_version_char(&self, arg: char) -> ClapResult<()> {$/;"	f
check_for_help_and_version_str	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn check_for_help_and_version_str(&self, arg: &OsStr) -> ClapResult<()> {$/;"	f
clap_app	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! clap_app {$/;"	d
clone	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn clone(&self) -> Self { App { p: self.p.clone() } }$/;"	f
clone	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/switched.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    fn clone(&self) -> Self {$/;"	f
color	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^macro_rules! color {$/;"	d
color	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn color(&self) -> ColorWhen {$/;"	f
color	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^macro_rules! color {$/;"	d
colored_output	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^    fn colored_output() {$/;"	f
comment	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn comment(&mut self) -> Result<Option<Comment<'a>>, Error> {$/;"	f
compat	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    pub fn compat(self) -> Compat<Error> {$/;"	f
compat	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    fn compat(self) -> Compat<Self>$/;"	f
compat	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/result_ext.rs	/^        fn compat(self) -> Result<T, Compat<Error>> {$/;"	f
compat	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/result_ext.rs	/^    fn compat(self) -> Result<T, Compat<E>> {$/;"	f
compat	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/result_ext.rs	/^    fn compat(self) -> Result<T, Compat<E>>;$/;"	f
compat	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    pub fn compat(self) -> Compat<Error> {$/;"	f
conflicts_with	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn conflicts_with(mut self, name: &'a str) -> Self {$/;"	f
conflicts_with	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    pub fn conflicts_with(mut self, n: &'a str) -> Self {$/;"	f
conflicts_with_all	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn conflicts_with_all(mut self, names: &[&'a str]) -> Self {$/;"	f
conflicts_with_all	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    pub fn conflicts_with_all(mut self, ns: &[&'a str]) -> Self {$/;"	f
contains	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn contains(&self, arg: &str) -> bool { self.0.args.contains_key(arg) }$/;"	f
contains_bulk_memory	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/binary.rs	/^    fn contains_bulk_memory(funcs: &[&Func<'_>]) -> bool {$/;"	f
contains_byte	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn contains_byte(&self, b: u8) -> bool;$/;"	f
contains_byte	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn contains_byte(&self, byte: u8) -> bool {$/;"	f
contains_key	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^        pub fn contains_key(&self, key: usize) -> bool { self.inner.contains_key(&key) }$/;"	f
contains_long	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn contains_long(&self, l: &str) -> bool { longs!(self).any(|al| al == &l) }$/;"	f
contains_short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn contains_short(&self, s: char) -> bool { shorts!(self).any(|arg_s| arg_s == &s) }$/;"	f
context	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    pub fn context<D: Display + Send + Sync + 'static>(self, context: D) -> Context<D> {$/;"	f
context	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    fn context<D>(self, context: D) -> Context<D>$/;"	f
context	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/result_ext.rs	/^        fn context<D>(self, context: D) -> Result<T, Context<D>> where$/;"	f
context	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/result_ext.rs	/^    fn context<D>(self, context: D) -> Result<T, Context<D>>$/;"	f
context	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    pub fn context<D: Display + Send + Sync + 'static>(self, context: D) -> Context<D> {$/;"	f
copy_and_capture	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^fn copy_and_capture<R: Read, W: Write>($/;"	f
copy_until	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^fn copy_until<R: Read, W: Write>(r: &mut R, w: &mut W, delimiter_byte: u8) -> CopyUntilResult {$/;"	f
core_type	/home/sunfish/WASI/tools/witx/src/coretypes.rs	/^    pub fn core_type(&self) -> CoreFuncType {$/;"	f
crate_authors	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! crate_authors {$/;"	d
crate_description	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! crate_description {$/;"	d
crate_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! crate_name {$/;"	d
crate_version	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! crate_version {$/;"	d
create_error_usage	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/usage.rs	/^pub fn create_error_usage<'a, 'b>($/;"	f
create_flag_usage	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_flag_usage() {$/;"	f
create_help_and_version	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn create_help_and_version(&mut self) {$/;"	f
create_help_usage	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/usage.rs	/^pub fn create_help_usage(p: &Parser, incl_reqs: bool) -> String {$/;"	f
create_option_usage0	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage0() {$/;"	f
create_option_usage1	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage1() {$/;"	f
create_option_usage2	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage2() {$/;"	f
create_option_usage3	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage3() {$/;"	f
create_option_usage4	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage4() {$/;"	f
create_option_usage5	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage5() {$/;"	f
create_option_usage6	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage6() {$/;"	f
create_option_usage7	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage7() {$/;"	f
create_option_usage8	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage8() {$/;"	f
create_option_usage9	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage9() {$/;"	f
create_option_usage_both1	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both1() {$/;"	f
create_option_usage_both2	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both2() {$/;"	f
create_option_usage_both3	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both3() {$/;"	f
create_option_usage_both4	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both4() {$/;"	f
create_option_usage_both5	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both5() {$/;"	f
create_option_usage_both6	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both6() {$/;"	f
create_option_usage_both7	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both7() {$/;"	f
create_option_usage_both8	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both8() {$/;"	f
create_option_usage_both_equals1	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both_equals1() {$/;"	f
create_option_usage_both_equals2	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both_equals2() {$/;"	f
create_option_usage_both_equals3	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both_equals3() {$/;"	f
create_option_usage_both_equals4	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both_equals4() {$/;"	f
create_option_usage_both_equals5	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both_equals5() {$/;"	f
create_option_usage_both_equals6	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both_equals6() {$/;"	f
create_option_usage_both_equals7	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both_equals7() {$/;"	f
create_option_usage_both_equals8	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_both_equals8() {$/;"	f
create_option_usage_long1	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long1() {$/;"	f
create_option_usage_long10	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long10() {$/;"	f
create_option_usage_long2	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long2() {$/;"	f
create_option_usage_long3	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long3() {$/;"	f
create_option_usage_long4	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long4() {$/;"	f
create_option_usage_long5	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long5() {$/;"	f
create_option_usage_long6	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long6() {$/;"	f
create_option_usage_long7	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long7() {$/;"	f
create_option_usage_long8	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long8() {$/;"	f
create_option_usage_long9	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long9() {$/;"	f
create_option_usage_long_equals1	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long_equals1() {$/;"	f
create_option_usage_long_equals10	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long_equals10() {$/;"	f
create_option_usage_long_equals2	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long_equals2() {$/;"	f
create_option_usage_long_equals3	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long_equals3() {$/;"	f
create_option_usage_long_equals4	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long_equals4() {$/;"	f
create_option_usage_long_equals5	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long_equals5() {$/;"	f
create_option_usage_long_equals6	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long_equals6() {$/;"	f
create_option_usage_long_equals7	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long_equals7() {$/;"	f
create_option_usage_long_equals8	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long_equals8() {$/;"	f
create_option_usage_long_equals9	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_usage_long_equals9() {$/;"	f
create_option_with_vals1	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_with_vals1() {$/;"	f
create_option_with_vals2	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_with_vals2() {$/;"	f
create_option_with_vals3	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_with_vals3() {$/;"	f
create_option_with_vals4	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_with_vals4() {$/;"	f
create_option_with_vals5	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_option_with_vals5() {$/;"	f
create_positional_usage	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_positional_usage() {$/;"	f
create_positional_usage0	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn create_positional_usage0() {$/;"	f
create_smart_usage	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/usage.rs	/^fn create_smart_usage(p: &Parser, used: &[&str]) -> String {$/;"	f
create_usage_no_title	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/usage.rs	/^pub fn create_usage_no_title(p: &Parser, used: &[&str]) -> String {$/;"	f
create_usage_with_title	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/usage.rs	/^pub fn create_usage_with_title(p: &Parser, used: &[&str]) -> String {$/;"	f
cur	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn cur(&mut self) -> usize {$/;"	f
cur_span	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn cur_span(&self) -> Span {$/;"	f
cur_str	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn cur_str(&mut self) -> &'a str {$/;"	f
cursor	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    fn cursor(self) -> Cursor<'a> {$/;"	f
custom_keyword	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/mod.rs	/^macro_rules! custom_keyword {$/;"	d
datatype	/home/sunfish/WASI/tools/witx/src/ast.rs	/^    pub fn datatype(&self, name: &Id) -> Option<Rc<Datatype>> {$/;"	f
datatypes	/home/sunfish/WASI/tools/witx/src/ast.rs	/^    pub fn datatypes<'a>(&'a self) -> impl Iterator<Item = Rc<Datatype>> + 'a {$/;"	f
debug	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^    macro_rules! debug {$/;"	d
debug_asserts	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn debug_asserts(&self, a: &Arg) -> bool {$/;"	f
debug_macros	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^mod debug_macros {$/;"	m
debugln	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^    macro_rules! debugln {$/;"	d
default	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^    fn default() -> Self {$/;"	f
default	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/switched.rs	/^    fn default() -> Self {$/;"	f
default	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/valued.rs	/^    fn default() -> Self {$/;"	f
default	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    fn default() -> Self { ArgMatcher(ArgMatches::default()) }$/;"	f
default	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    fn default() -> Self {$/;"	f
default	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/matched_arg.rs	/^    fn default() -> Self {$/;"	f
default	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^    fn default() -> Self { ArgFlags(Flags::EMPTY_VALS | Flags::DELIM_NOT_SET) }$/;"	f
default	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^    fn default() -> Self {$/;"	f
default	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs	/^        fn default() -> Backtrace {$/;"	f
default_val	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn default_val(&self) -> Option<&'e OsStr> { None }$/;"	f
default_val	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn default_val(&self) -> Option<&'e OsStr> { (*self).default_val() }$/;"	f
default_val	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn default_val(&self) -> Option<&'e OsStr>;$/;"	f
default_val	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn default_val(&self) -> Option<&'e OsStr> { None }$/;"	f
default_val	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn default_val(&self) -> Option<&'e OsStr> { self.v.default_val }$/;"	f
default_val	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn default_val(&self) -> Option<&'e OsStr> { self.v.default_val }$/;"	f
default_vals_ifs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	f
default_vals_ifs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> { (*self).default_vals_ifs() }$/;"	f
default_vals_ifs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>>;$/;"	f
default_vals_ifs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	f
default_vals_ifs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	f
default_vals_ifs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	f
default_value	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn default_value(self, val: &'a str) -> Self {$/;"	f
default_value_if	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn default_value_if(self, arg: &'a str, val: Option<&'b str>, default: &'b str) -> Self {$/;"	f
default_value_if_os	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn default_value_if_os($/;"	f
default_value_ifs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn default_value_ifs(mut self, ifs: &[(&'a str, Option<&'b str>, &'b str)]) -> Self {$/;"	f
default_value_ifs_os	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn default_value_ifs_os(mut self, ifs: &[(&'a str, Option<&'b OsStr>, &'b OsStr)]) -> Self {$/;"	f
default_value_os	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn default_value_os(mut self, val: &'a OsStr) -> Self {$/;"	f
deinline_export	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/expand.rs	/^    pub fn deinline_export(&mut self, item: &mut ModuleField<'a>) {$/;"	f
deinline_import	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/expand.rs	/^    pub fn deinline_import(&mut self, item: &mut ModuleField<'a>) {$/;"	f
deref	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^            fn deref(&self) -> &'static str {$/;"	f
derive	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/lib.rs	/^mod derive {$/;"	m
derive_display_order	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn derive_display_order(&mut self) {$/;"	f
desc	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^    fn desc(&self) -> &'static str {$/;"	f
description	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    fn description(&self) -> &str { &*self.message }$/;"	f
description	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/compat.rs	/^        fn description(&self) -> &'static str {$/;"	f
diamond_dependency	/home/sunfish/WASI/tools/witx/src/toplevel.rs	/^    fn diamond_dependency() {$/;"	f
did_you_mean	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/suggestions.rs	/^pub fn did_you_mean<'a, T: ?Sized, I>(_: &str, _: I) -> Option<&'a str>$/;"	f
did_you_mean	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/suggestions.rs	/^pub fn did_you_mean<'a, T: ?Sized, I>(v: &str, possible_values: I) -> Option<&'a str>$/;"	f
did_you_mean_error	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn did_you_mean_error(&self, arg: &str, matcher: &mut ArgMatcher<'a>, args_rest: &[&str]) -> ClapResult<()> {$/;"	f
did_you_mean_flag_suffix	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/suggestions.rs	/^pub fn did_you_mean_flag_suffix<'z, T, I>($/;"	f
did_you_mean_value_suffix	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/suggestions.rs	/^pub fn did_you_mean_value_suffix<'z, T, I>(arg: &str, values: I) -> (String, Option<&'z str>)$/;"	f
dimensions	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    pub fn dimensions() -> Option<(usize, usize)> {$/;"	f
disp_ord	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn disp_ord(&self) -> usize {$/;"	f
disp_ord	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn disp_ord(&self) -> usize;$/;"	f
disp_ord	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn disp_ord(&self) -> usize { self.s.disp_ord }$/;"	f
disp_ord	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn disp_ord(&self) -> usize { self.s.disp_ord }$/;"	f
disp_ord	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn disp_ord(&self) -> usize { self.index as usize }$/;"	f
display	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/mod.rs	/^            fn display() -> &'static str {$/;"	f
display	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^            fn display() -> &'static str {$/;"	f
display	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^    fn display() -> &'static str {$/;"	f
display	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/types.rs	/^    fn display() -> &'static str {$/;"	f
display	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/wast.rs	/^    fn display() -> &'static str {$/;"	f
display	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    fn display() -> &'static str;$/;"	f
display	/home/sunfish/WASI/tools/witx/src/parser.rs	/^    fn display() -> &'static str {$/;"	f
display_mult	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn display_mult() {$/;"	f
display_order	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn display_order(mut self, ord: usize) -> Self {$/;"	f
display_order	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn display_order(mut self, ord: usize) -> Self {$/;"	f
display_required	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn display_required() {$/;"	f
display_val_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn display_val_names() {$/;"	f
display_val_names_req	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn display_val_names_req() {$/;"	f
downcast	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    pub fn downcast<T: Fail>(self) -> Result<T, Error> {$/;"	f
downcast	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    pub fn downcast<T: Fail>(self) -> Result<T, Error> {$/;"	f
downcast_can_be_used	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    fn downcast_can_be_used() {$/;"	f
downcast_mut	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    pub fn downcast_mut<T: Fail>(&mut self) -> Option<&mut T> {$/;"	f
downcast_mut	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    pub fn downcast_mut<T: Fail>(&mut self) -> Option<&mut T> {$/;"	f
downcast_mut	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    pub fn downcast_mut<T: Fail>(&mut self) -> Option<&mut T> {$/;"	f
downcast_ref	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    pub fn downcast_ref<T: Fail>(&self) -> Option<&T> {$/;"	f
downcast_ref	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    pub fn downcast_ref<T: Fail>(&self) -> Option<&T> {$/;"	f
downcast_ref	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    pub fn downcast_ref<T: Fail>(&self) -> Option<&T> {$/;"	f
drop	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    fn drop(&mut self) {$/;"	f
eat_char	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn eat_char(&mut self, needle: char) -> Option<usize> {$/;"	f
eat_str	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn eat_str(&mut self, s: &str) -> Option<usize> {$/;"	f
empty	/home/sunfish/WASI/tools/witx/src/toplevel.rs	/^    fn empty() {$/;"	f
empty_value	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn empty_value<U>(arg: &AnyArg, usage: U, color: ColorWhen) -> Self$/;"	f
empty_values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn empty_values(mut self, ev: bool) -> Self {$/;"	f
encode	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^                            fn encode<'a>($(arg: &instructions!(@ty $($arg)*),)? v: &mut Vec<u8>) {$/;"	f
encode	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^            fn encode(&self, v: &mut Vec<u8>) {$/;"	f
encode	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/module.rs	/^    pub fn encode(&mut self) -> std::result::Result<Vec<u8>, crate::Error> {$/;"	f
encode	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/binary.rs	/^    fn encode(&self, _e: &mut Vec<u8>) {$/;"	f
encode	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/binary.rs	/^    fn encode(&self, dst: &mut Vec<u8>) {$/;"	f
encode	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/binary.rs	/^    fn encode(&self, e: &mut Vec<u8>) {$/;"	f
encode	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/binary.rs	/^    fn encode(&self, e: &mut Vec<u8>);$/;"	f
encode	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/binary.rs	/^pub fn encode(module: &Module<'_>) -> Vec<u8> {$/;"	f
ensure	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/macros.rs	/^macro_rules! ensure {$/;"	d
entry	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn entry(&mut self, arg: &'a str) -> Entry<&'a str, MatchedArg> { self.0.args.entry(arg) }$/;"	f
entry	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^        pub fn entry(&mut self, key: usize) -> Entry<V> { self.inner.entry(key) }$/;"	f
env	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> { None }$/;"	f
env	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> { (*self).env() }$/;"	f
env	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)>;$/;"	f
env	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn env(self, name: &'a str) -> Self {$/;"	f
env	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> { None }$/;"	f
env	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	f
env	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	f
env_os	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn env_os(mut self, name: &'a OsStr) -> Self {$/;"	f
eq	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    fn eq(&self, other: &Arg<'n, 'e>) -> bool {$/;"	f
eq	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/base.rs	/^    fn eq(&self, other: &Base<'n, 'e>) -> bool { self.name == other.name }$/;"	f
eq	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn eq(&self, other: &FlagBuilder<'n, 'e>) -> bool { self.b == other.b }$/;"	f
eq	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn eq(&self, other: &OptBuilder<'n, 'e>) -> bool { self.b == other.b }$/;"	f
eq	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn eq(&self, other: &PosBuilder<'n, 'e>) -> bool { self.b == other.b }$/;"	f
eq	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^    fn eq(&self, other: &Id<'a>) -> bool {$/;"	f
eq	/home/sunfish/WASI/tools/witx/src/ast.rs	/^    fn eq(&self, rhs: &Document) -> bool {$/;"	f
eq	/home/sunfish/WASI/tools/witx/src/ast.rs	/^    fn eq(&self, rhs: &Entry) -> bool {$/;"	f
eq	/home/sunfish/WASI/tools/witx/src/ast.rs	/^    fn eq(&self, rhs: &Module) -> bool {$/;"	f
eq	/home/sunfish/WASI/tools/witx/src/ast.rs	/^    fn eq(&self, rhs: &ModuleEntry) -> bool {$/;"	f
eq	/home/sunfish/WASI/tools/witx/src/parser.rs	/^    fn eq(&self, other: &InterfaceFuncSyntax<'_>) -> bool {$/;"	f
eq	/home/sunfish/WASI/tools/witx/src/parser.rs	/^    fn eq(&self, other: &ModuleImportSyntax<'_>) -> bool {$/;"	f
err_msg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs	/^pub fn err_msg<D: Display + Debug + Sync + Send + 'static>(msg: D) -> Error {$/;"	f
error	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^    pub fn error<T>(&self, msg: T) -> Format<T>$/;"	f
error	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn error(&self, pos: usize, kind: LexError) -> Error {$/;"	f
error	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn error(&self, msg: impl fmt::Display) -> Error {$/;"	f
error	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn error(self) -> Error {$/;"	f
error	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn error(self, msg: impl fmt::Display) -> Error {$/;"	f
error_at	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    fn error_at(self, span: Span, msg: &dyn fmt::Display) -> Error {$/;"	f
escape_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/zsh.rs	/^fn escape_help(string: &str) -> String {$/;"	f
escape_string	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/elvish.rs	/^fn escape_string(string: &str) -> String { string.replace("'", "''") }$/;"	f
escape_string	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/fish.rs	/^fn escape_string(string: &str) -> String { string.replace("\\\\", "\\\\\\\\").replace("'", "\\\\'") }$/;"	f
escape_string	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/powershell.rs	/^fn escape_string(string: &str) -> String { string.replace("'", "''") }$/;"	f
escape_value	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/zsh.rs	/^fn escape_value(string: &str) -> String {$/;"	f
exit	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn exit(&self) -> ! {$/;"	f
expand	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/tyexpand.rs	/^    pub fn expand(&mut self, item: &mut ModuleField<'a>) {$/;"	f
expand_data	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/tyexpand.rs	/^    fn expand_data(&mut self, data: &mut Data<'a>) {$/;"	f
expand_elem	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/tyexpand.rs	/^    fn expand_elem(&mut self, elem: &mut Elem<'a>) {$/;"	f
expand_expression	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/tyexpand.rs	/^    fn expand_expression(&mut self, expr: &mut Expression<'a>) {$/;"	f
expand_func	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/tyexpand.rs	/^    fn expand_func(&mut self, func: &mut Func<'a>) {$/;"	f
expand_global	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/tyexpand.rs	/^    fn expand_global(&mut self, global: &mut Global<'a>) {$/;"	f
expand_import	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/tyexpand.rs	/^    fn expand_import(&mut self, import: &mut Import<'a>) {$/;"	f
expand_instr	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/tyexpand.rs	/^    fn expand_instr(&mut self, instr: &mut Instruction<'a>) {$/;"	f
expand_type_use	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/tyexpand.rs	/^    fn expand_type_use(&mut self, item: &mut TypeUse<'a>) {$/;"	f
f	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^        macro_rules! f {$/;"	d
failure	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    fn failure(&self) -> &Fail {$/;"	f
failure_mut	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    fn failure_mut(&mut self) -> &mut Fail {$/;"	f
fget_line	/home/sunfish/WASI/tools/witx/src/io.rs	/^    fn fget_line(&self, path: &Path, line: usize) -> Result<String, WitxError> {$/;"	f
fget_line	/home/sunfish/WASI/tools/witx/src/io.rs	/^    fn fget_line(&self, path: &Path, line_num: usize) -> Result<String, WitxError> {$/;"	f
fget_line	/home/sunfish/WASI/tools/witx/src/io.rs	/^    fn fget_line(&self, path: &Path, line_num: usize) -> Result<String, WitxError>;$/;"	f
fgets	/home/sunfish/WASI/tools/witx/src/io.rs	/^    fn fgets(&self, path: &Path) -> Result<String, WitxError> {$/;"	f
fgets	/home/sunfish/WASI/tools/witx/src/io.rs	/^    fn fgets(&self, path: &Path) -> Result<String, WitxError>;$/;"	f
fill_in	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/valued.rs	/^    pub fn fill_in(&mut self) {$/;"	f
fill_in_global_values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    fn fill_in_global_values($/;"	f
find_any_arg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn find_any_arg(&self, name: &str) -> Option<&AnyArg<'a, 'b>> {$/;"	f
find_any_by_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! find_any_by_name {$/;"	d
find_by_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! find_by_name {$/;"	d
find_flag_by_long	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! find_flag_by_long {$/;"	d
find_flag_by_short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! find_flag_by_short {$/;"	d
find_from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! find_from {$/;"	d
find_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/binary.rs	/^fn find_names<'a>(module: &Module<'a>, fields: &[ModuleField<'a>]) -> Names<'a> {$/;"	f
find_opt_by_long	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! find_opt_by_long {$/;"	d
find_opt_by_short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! find_opt_by_short {$/;"	d
find_root_cause	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    pub fn find_root_cause(&self) -> &Fail {$/;"	f
find_root_cause	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    pub fn find_root_cause(&self) -> &Fail {$/;"	f
find_root_cause	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^fn find_root_cause(mut fail: &Fail) -> &Fail {$/;"	f
find_subcmd	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! find_subcmd {$/;"	d
find_subcommand	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn find_subcommand(&'b self, sc: &str) -> Option<&'b App<'a, 'b>> {$/;"	f
finish_parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/types.rs	/^    fn finish_parse(&mut self, allow_names: bool, parser: Parser<'a>) -> Result<()> {$/;"	f
flagbuilder_display	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn flagbuilder_display() {$/;"	f
flagbuilder_display_multiple_aliases	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn flagbuilder_display_multiple_aliases() {$/;"	f
flagbuilder_display_single_alias	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn flagbuilder_display_single_alias() {$/;"	f
flags	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn flags(&self) -> Iter<FlagBuilder<'a, 'b>> { self.flags.iter() }$/;"	f
float	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^macro_rules! float {$/;"	d
float	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn float() {$/;"	f
float	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn float(mut self) -> Option<(&'a Float<'a>, Self)> {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result { write!(f, "{}", self.p.meta.name) }$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/shell.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    fn fmt(&self, f: &mut std_fmt::Formatter) -> std_fmt::Result { writeln!(f, "{}", self.message) }$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result { write!(f, "{}", &self.format()) }$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^            fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^        fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs	/^        fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs	/^        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/box_std.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/compat.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/context.rs	/^        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/sync_failure.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/sunfish/WASI/tools/witx/src/render.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
follows_general_if_failure_is_not_set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs	/^    fn follows_general_if_failure_is_not_set() {$/;"	f
format	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^    fn format(&self) -> &T {$/;"	f
format	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^    fn format(&self) -> ANSIString {$/;"	f
format_err	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/macros.rs	/^macro_rules! format_err {$/;"	d
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn from(mut yaml: &'a Yaml) -> Self {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    fn from(a: &'z Arg<'a, 'b>) -> Self {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/base.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self { a.b.clone() }$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn from(a: &'z Arg<'a, 'b>) -> Self {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn from(mut a: Arg<'a, 'b>) -> Self {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn from(mut a: Arg<'n, 'e>) -> Self {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/switched.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self { a.s.clone() }$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/valued.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    fn from(b: &'a BTreeMap<Yaml, Yaml>) -> Self {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    fn from(g: &'z ArgGroup<'a>) -> Self {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    fn from(e: io::Error) -> Self { Error::with_description(e.description(), ErrorKind::Io) }$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    fn from(e: std_fmt::Error) -> Self {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/compat.rs	/^        fn from(error: Error) -> Box<StdError + Send + Sync> {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/compat.rs	/^        fn from(error: Error) -> Box<StdError> {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/context.rs	/^    fn from(display: D) -> Context<D> {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs	/^    fn from(failure: F) -> ErrorImpl {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl_small.rs	/^    fn from(failure: F) -> ErrorImpl {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    fn from(failure: F) -> Error {$/;"	f
from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    fn from(failure: F) -> Error {$/;"	f
from	/home/sunfish/WASI/tools/witx/src/coretypes.rs	/^    fn from(i: IntRepr) -> AtomType {$/;"	f
from_arg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    pub fn from_arg(mut a: Arg<'n, 'e>, idx: u64) -> Self {$/;"	f
from_arg_ref	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    pub fn from_arg_ref(a: &Arg<'n, 'e>, idx: u64) -> Self {$/;"	f
from_argmatches	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/lib.rs	/^        fn from_argmatches<'a>(matches: clap::ArgMatches<'a>) -> Self;$/;"	f
from_boxed_compat	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    pub fn from_boxed_compat(err: Box<StdError + Sync + Send + 'static>) -> Error {$/;"	f
from_bytes	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn from_bytes(b: &[u8]) -> &Self {$/;"	f
from_bytes	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn from_bytes(b: &[u8]) -> &Self;$/;"	f
from_str	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^    fn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {$/;"	f
from_str	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^    fn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {$/;"	f
from_str	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/shell.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	f
from_str	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^            fn from_str(s: &str) -> ::std::result::Result<Self,Self::Err> {$/;"	f
from_usage	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn from_usage(u: &'a str) -> Self {$/;"	f
from_usage	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    pub fn from_usage(usage: &'a str) -> Self {$/;"	f
from_yaml	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn from_yaml(yaml: &'a Yaml) -> App<'a, 'a> { App::from(yaml) }$/;"	f
from_yaml	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn from_yaml(y: &BTreeMap<Yaml, Yaml>) -> Arg {$/;"	f
from_yaml	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    pub fn from_yaml(y: &'a Yaml) -> ArgGroup<'a> { ArgGroup::from(y.as_hash().unwrap()) }$/;"	f
from_yaml	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/subcommand.rs	/^    pub fn from_yaml(yaml: &Yaml) -> App { App::from_yaml(yaml) }$/;"	f
func	/home/sunfish/WASI/tools/witx/src/ast.rs	/^    pub fn func(&self, name: &Id) -> Option<Rc<InterfaceFunc>> {$/;"	f
funcs	/home/sunfish/WASI/tools/witx/src/ast.rs	/^    pub fn funcs<'a>(&'a self) -> impl Iterator<Item = Rc<InterfaceFunc>> + 'a {$/;"	f
gen_completions	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn gen_completions<T: Into<OsString>, S: Into<String>>($/;"	f
gen_completions	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn gen_completions(&mut self, for_shell: Shell, od: OsString) {$/;"	f
gen_completions_to	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn gen_completions_to<W: Write, S: Into<String>>($/;"	f
gen_completions_to	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn gen_completions_to<W: Write>(&mut self, for_shell: Shell, buf: &mut W) {$/;"	f
gen_fish_inner	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/fish.rs	/^fn gen_fish_inner(root_command: &str, comp_gen: &FishGen, subcommand: &str, buffer: &mut String) {$/;"	f
generate	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/mod.rs	/^    pub fn generate<W: Write>(&self, for_shell: Shell, buf: &mut W) {$/;"	f
generate_inner	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/elvish.rs	/^fn generate_inner<'a, 'b, 'p>($/;"	f
generate_inner	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/powershell.rs	/^fn generate_inner<'a, 'b, 'p>($/;"	f
generate_to	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/bash.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	f
generate_to	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/elvish.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	f
generate_to	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/fish.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	f
generate_to	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/powershell.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	f
generate_to	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/zsh.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	f
get	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn get(&self, arg: &str) -> Option<&MatchedArg> { self.0.args.get(arg) }$/;"	f
get	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^        pub fn get(&self, key: usize) -> Option<&V> { self.inner.get(&key) }$/;"	f
get	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    fn get(&self, name: &wast::Id<'_>) -> Result<Id, ValidationError> {$/;"	f
get	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    fn get(&self, syntax: &str, location: Location) -> Result<Id, ValidationError> {$/;"	f
get_all_subcommand_paths	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/mod.rs	/^pub fn get_all_subcommand_paths(p: &Parser, first: bool) -> Vec<String> {$/;"	f
get_args_of	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/zsh.rs	/^fn get_args_of(p: &Parser) -> String {$/;"	f
get_args_tag	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/usage.rs	/^fn get_args_tag(p: &Parser, incl_reqs: bool) -> Option<String> {$/;"	f
get_bin_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn get_bin_name(&self) -> Option<&str> { self.p.meta.bin_name.as_ref().map(|s| s.as_str()) }$/;"	f
get_block_comment	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^        fn get_block_comment(input: &str) -> &str {$/;"	f
get_context	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/context.rs	/^        pub fn get_context(&self) -> &D {$/;"	f
get_float	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^        fn get_float(input: &str) -> FloatVal<'_> {$/;"	f
get_id	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^        fn get_id(input: &str) -> &str {$/;"	f
get_integer	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^        fn get_integer(input: &str) -> Cow<'_, str> {$/;"	f
get_keyword	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^        fn get_keyword(input: &str) -> &str {$/;"	f
get_line_comment	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^        fn get_line_comment(input: &str) -> &str {$/;"	f
get_matches	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn get_matches(self) -> ArgMatches<'a> { self.get_matches_from(&mut env::args_os()) }$/;"	f
get_matches_from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn get_matches_from<I, T>(mut self, itr: I) -> ArgMatches<'a>$/;"	f
get_matches_from_safe	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn get_matches_from_safe<I, T>(mut self, itr: I) -> ClapResult<ArgMatches<'a>>$/;"	f
get_matches_from_safe_borrow	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn get_matches_from_safe_borrow<I, T>(&mut self, itr: I) -> ClapResult<ArgMatches<'a>>$/;"	f
get_matches_safe	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn get_matches_safe(self) -> ClapResult<ArgMatches<'a>> {$/;"	f
get_matches_with	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn get_matches_with<I, T>($/;"	f
get_mut	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn get_mut(&mut self, arg: &str) -> Option<&mut MatchedArg> { self.0.args.get_mut(arg) }$/;"	f
get_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn get_name(&self) -> &str { &self.p.meta.name }$/;"	f
get_ref	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/compat.rs	/^    pub fn get_ref(&self) -> &E {$/;"	f
get_required_usage_from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/usage.rs	/^pub fn get_required_usage_from<'a, 'b>($/;"	f
get_requires	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/usage.rs	/^    macro_rules! get_requires {$/;"	d
get_reserved	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^        fn get_reserved(input: &str) -> &str {$/;"	f
get_string	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^        fn get_string(input: &str) -> Cow<'_, [u8]> {$/;"	f
get_subcommands_of	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/zsh.rs	/^fn get_subcommands_of(p: &Parser) -> String {$/;"	f
get_token	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn get_token(input: &str) -> Token<'_> {$/;"	f
get_tooltip	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/elvish.rs	/^fn get_tooltip<T : ToString>(help: Option<&str>, data: T) -> String {$/;"	f
get_tooltip	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/powershell.rs	/^fn get_tooltip<T : ToString>(help: Option<&str>, data: T) -> String {$/;"	f
get_whitespace	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^        fn get_whitespace(input: &str) -> &str {$/;"	f
get_zsh_arg_conflicts	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/macros.rs	/^macro_rules! get_zsh_arg_conflicts {$/;"	d
global	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn global(self, g: bool) -> Self {$/;"	f
global_setting	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn global_setting(mut self, setting: AppSettings) -> Self {$/;"	f
global_settings	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn global_settings(mut self, settings: &[AppSettings]) -> Self {$/;"	f
good	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^    pub fn good<T>(&self, msg: T) -> Format<T>$/;"	f
group	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn group(mut self, group: ArgGroup<'a>) -> Self {$/;"	f
group	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn group(mut self, name: &'a str) -> Self {$/;"	f
groups	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn groups(mut self, groups: &[ArgGroup<'a>]) -> Self {$/;"	f
groups	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn groups(mut self, names: &[&'a str]) -> Self {$/;"	f
groups	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    fn groups() {$/;"	f
groups_for_arg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn groups_for_arg(&self, name: &str) -> Option<Vec<&'a str>> {$/;"	f
handle_self_overrides	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn handle_self_overrides<'b>(&mut self, a: Option<&AnyArg<'a, 'b>>) {$/;"	f
has_args	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn has_args(&self) -> bool {$/;"	f
has_flags	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn has_flags(&self) -> bool { !self.flags.is_empty() }$/;"	f
has_opts	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn has_opts(&self) -> bool { !self.opts.is_empty() }$/;"	f
has_positionals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn has_positionals(&self) -> bool { !self.positionals.is_empty() }$/;"	f
has_subcommands	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn has_subcommands(&self) -> bool { !self.subcommands.is_empty() }$/;"	f
has_switch	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn has_switch(&self) -> bool { false }$/;"	f
has_switch	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn has_switch(&self) -> bool { (*self).has_switch() }$/;"	f
has_switch	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn has_switch(&self) -> bool;$/;"	f
has_switch	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn has_switch(&self) -> bool { true }$/;"	f
has_switch	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn has_switch(&self) -> bool { true }$/;"	f
has_switch	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn has_switch(&self) -> bool { false }$/;"	f
has_visible_flags	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn has_visible_flags(&self) -> bool {$/;"	f
has_visible_opts	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn has_visible_opts(&self) -> bool {$/;"	f
has_visible_positionals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn has_visible_positionals(&self) -> bool {$/;"	f
has_visible_subcommands	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn has_visible_subcommands(&self) -> bool {$/;"	f
hash	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^    fn hash<H: Hasher>(&self, hasher: &mut H) {$/;"	f
help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn help<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>, spec_vals: &str) -> io::Result<()> {$/;"	f
help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn help(&self) -> Option<&'e str> { self.p.meta.about }$/;"	f
help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn help<S: Into<&'b str>>(mut self, help: S) -> Self {$/;"	f
help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn help(&self) -> Option<&'e str> { (*self).help() }$/;"	f
help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn help(&self) -> Option<&'e str>;$/;"	f
help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn help(mut self, h: &'b str) -> Self {$/;"	f
help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn help(&self) -> Option<&'e str> { self.b.help }$/;"	f
help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn help(&self) -> Option<&'e str> { self.b.help }$/;"	f
help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn help(&self) -> Option<&'e str> { self.b.help }$/;"	f
help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn help(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	f
help_message	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn help_message<S: Into<&'a str>>(mut self, s: S) -> Self {$/;"	f
help_short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn help_short<S: AsRef<str> + 'b>(mut self, s: S) -> Self {$/;"	f
help_short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn help_short(&mut self, s: &str) {$/;"	f
help_start	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^fn help_start(b: u8) -> bool { b != b'\\'' }$/;"	f
hex_strtof	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^    fn hex_strtof() {$/;"	f
hexdigit	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn hexdigit(&mut self) -> Result<(usize, u8), Error> {$/;"	f
hexnum	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn hexnum(&mut self) -> Result<u32, Error> {$/;"	f
hidden	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn hidden(self, h: bool) -> Self {$/;"	f
hidden_long_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn hidden_long_help(self, hide: bool) -> Self {$/;"	f
hidden_short_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn hidden_short_help(self, hide: bool) -> Self {$/;"	f
hide_default_value	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn hide_default_value(self, hide: bool) -> Self {$/;"	f
hide_env_values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn hide_env_values(self, hide: bool) -> Self {$/;"	f
hide_possible_values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn hide_possible_values(self, hide: bool) -> Self {$/;"	f
highlight_source	/home/sunfish/WASI/tools/witx/src/lib.rs	/^    pub fn highlight_source(&self) -> String {$/;"	f
highlight_source_with	/home/sunfish/WASI/tools/witx/src/lib.rs	/^    pub fn highlight_source_with(&self, witxio: &dyn WitxIo) -> String {$/;"	f
id	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn id() {$/;"	f
id	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn id(mut self) -> Option<(&'a str, Self)> {$/;"	f
ident	/home/sunfish/WASI/tools/witx/src/render.rs	/^    fn ident(s: &str) -> SExpr {$/;"	f
impl_settings	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! impl_settings {$/;"	d
implied_settings	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn implied_settings(&mut self, a: &Arg<'a, 'b>) {$/;"	f
import	/home/sunfish/WASI/tools/witx/src/ast.rs	/^    pub fn import(&self, name: &Id) -> Option<Rc<ModuleImport>> {$/;"	f
imports	/home/sunfish/WASI/tools/witx/src/ast.rs	/^    pub fn imports<'a>(&'a self) -> impl Iterator<Item = Rc<ModuleImport>> + 'a {$/;"	f
inc_occurrence_of	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn inc_occurrence_of(&mut self, arg: &'a str) {$/;"	f
inc_occurrences_of	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn inc_occurrences_of(&mut self, args: &[&'a str]) {$/;"	f
index	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn index(mut self, idx: u64) -> Self {$/;"	f
index_of	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    pub fn index_of<S: AsRef<str>>(&self, name: S) -> Option<usize> {$/;"	f
indices_of	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    pub fn indices_of<S: AsRef<str>>(&'a self, name: S) -> Option<Indices<'a>> {$/;"	f
input	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    pub fn input(&self) -> &'a str {$/;"	f
input_pos	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    fn input_pos(self, src: &'a str) -> usize {$/;"	f
insert	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn insert(&mut self, name: &'a str) { self.0.args.insert(name, MatchedArg::new()); }$/;"	f
insert	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^        pub fn insert(&mut self, key: usize, value: V) -> Option<V> {$/;"	f
instructions	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^macro_rules! instructions {$/;"	d
integer	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn integer() {$/;"	f
integer	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn integer(mut self) -> Option<(&'a Integer<'a>, Self)> {$/;"	f
integers	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^macro_rules! integers {$/;"	d
into	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    fn into(self) -> ArgMatches<'a> { self.0 }$/;"	f
into_app	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/lib.rs	/^        fn into_app<'a, 'b>() -> clap::App<'a, 'b>;$/;"	f
into_inner	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/compat.rs	/^    pub fn into_inner(self) -> E {$/;"	f
introduce	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    fn introduce(&mut self, name: &wast::Id<'_>) -> Result<Id, ValidationError> {$/;"	f
introduce	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    fn introduce(&mut self, syntax: &str, location: Location) -> Result<Id, ValidationError> {$/;"	f
invalid_subcommand	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn invalid_subcommand<S, D, N, U>($/;"	f
invalid_utf8	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn invalid_utf8<U>(usage: U, color: ColorWhen) -> Self$/;"	f
invalid_value	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn invalid_value<B, G, U>($/;"	f
io_error	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn io_error(e: &Error, color: ColorWhen) -> Self {$/;"	f
is_a_tty	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^pub fn is_a_tty(_: bool) -> bool {$/;"	f
is_a_tty	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^pub fn is_a_tty(stderr: bool) -> bool {$/;"	f
is_alias	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn is_alias(&self, value: &str) -> bool {$/;"	f
is_backtrace_enabled	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs	/^fn is_backtrace_enabled<F: Fn(&str) -> Option<OsString>>(get_var: F) -> bool {$/;"	f
is_bin_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn is_bin_name(&self, value: &str) -> bool {$/;"	f
is_empty	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn is_empty(&self) -> bool { self.0.args.is_empty() }$/;"	f
is_empty	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^        pub fn is_empty(&self) -> bool { self.inner.is_empty() }$/;"	f
is_empty	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/binary.rs	/^    fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn is_empty(self) -> bool {$/;"	f
is_idchar	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^fn is_idchar(c: char) -> bool {$/;"	f
is_missing_required_ok	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^    fn is_missing_required_ok(&self, a: &AnyArg, matcher: &ArgMatcher) -> bool {$/;"	f
is_new_arg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn is_new_arg(&mut self, arg_os: &OsStr, needs_val_of: ParseResult) -> bool {$/;"	f
is_present	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn is_present(&self, name: &str) -> bool {$/;"	f
is_present	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    pub fn is_present<S: AsRef<str>>(&self, name: S) -> bool {$/;"	f
is_set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn is_set(&self, _: ArgSettings) -> bool { false }$/;"	f
is_set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn is_set(&self, s: AS) -> bool { self.settings.is_set(s) }$/;"	f
is_set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn is_set(&self, ArgSettings) -> bool;$/;"	f
is_set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn is_set(&self, a: ArgSettings) -> bool { (*self).is_set(a) }$/;"	f
is_set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn is_set(&self, s: ArgSettings) -> bool {$/;"	f
is_set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/base.rs	/^    pub fn is_set(&self, s: ArgSettings) -> bool { self.settings.is_set(s) }$/;"	f
is_set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn is_set(&self, s: ArgSettings) -> bool { self.b.settings.is_set(s) }$/;"	f
is_set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn is_set(&self, s: ArgSettings) -> bool { self.b.settings.is_set(s) }$/;"	f
is_set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn is_set(&self, s: ArgSettings) -> bool { self.b.settings.is_set(s) }$/;"	f
is_set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^        pub fn is_set(&self, s: $n) -> bool {$/;"	f
is_term_dumb	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^pub fn is_term_dumb() -> bool { env::var("TERM").ok() == Some(String::from("dumb")) }$/;"	f
iter	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn iter(&self) -> Iter<&str, MatchedArg> { self.0.args.iter() }$/;"	f
iter	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^        pub fn iter(&self) -> Iter<V> {$/;"	f
iter_causes	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    pub fn iter_causes(&self) -> Causes {$/;"	f
iter_causes	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    pub fn iter_causes(&self) -> Causes {$/;"	f
iter_chain	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    pub fn iter_chain(&self) -> Causes {$/;"	f
iter_chain	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    pub fn iter_chain(&self) -> Causes {$/;"	f
key	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/tyexpand.rs	/^    fn key(&self, ty: &FunctionType) -> (Vec<ValType>, Vec<ValType>) {$/;"	f
keyword	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn keyword() {$/;"	f
keyword	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn keyword(mut self) -> Option<(&'a str, Self)> {$/;"	f
kind	/home/sunfish/WASI/tools/witx/src/ast.rs	/^    pub fn kind(&self) -> &'static str {$/;"	f
kw	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/mod.rs	/^pub mod kw {$/;"	m
kw	/home/sunfish/WASI/tools/witx/src/parser.rs	/^mod kw {$/;"	m
last	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn last(self, l: bool) -> Self {$/;"	f
len	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^        pub fn len(&self) -> usize { self.inner.len() }$/;"	f
lex	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lib.rs	/^    fn lex(span: Span, content: &str, kind: lexer::LexError) -> Error {$/;"	f
lex_error	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lib.rs	/^    pub fn lex_error(&self) -> Option<&lexer::LexError> {$/;"	f
line_comment_smoke	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn line_comment_smoke() {$/;"	f
linecol_in	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^    pub fn linecol_in(&self, text: &str) -> (usize, usize) {$/;"	f
load	/home/sunfish/WASI/tools/witx/src/lib.rs	/^pub fn load<P: AsRef<Path>>(path: P) -> Result<Document, WitxError> {$/;"	f
load_yaml	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! load_yaml {$/;"	d
location	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    fn location(&self, span: wast::Span) -> Location {$/;"	f
long	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn long<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> io::Result<()> {$/;"	f
long	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn long(&self) -> Option<&'e str> { None }$/;"	f
long	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn long(&self) -> Option<&'e str> { (*self).long() }$/;"	f
long	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn long(&self) -> Option<&'e str>;$/;"	f
long	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn long(mut self, l: &'b str) -> Self {$/;"	f
long	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn long(&self) -> Option<&'e str> { self.s.long }$/;"	f
long	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn long(&self) -> Option<&'e str> { self.s.long }$/;"	f
long	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn long(&self) -> Option<&'e str> { None }$/;"	f
long	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn long(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	f
long_about	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn long_about<S: Into<&'b str>>(mut self, about: S) -> Self {$/;"	f
long_end	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^fn long_end(b: u8) -> bool {$/;"	f
long_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn long_help(&self) -> Option<&'e str> { self.p.meta.long_about }$/;"	f
long_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn long_help(&self) -> Option<&'e str> { (*self).long_help() }$/;"	f
long_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn long_help(&self) -> Option<&'e str>;$/;"	f
long_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn long_help(mut self, h: &'b str) -> Self {$/;"	f
long_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn long_help(&self) -> Option<&'e str> { self.b.long_help }$/;"	f
long_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn long_help(&self) -> Option<&'e str> { self.b.long_help }$/;"	f
long_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn long_help(&self) -> Option<&'e str> { self.b.long_help }$/;"	f
long_version	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn long_version<S: Into<&'b str>>(mut self, ver: S) -> Self {$/;"	f
longest_filter	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn longest_filter(&self) -> bool { true }$/;"	f
longest_filter	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn longest_filter(&self) -> bool { (*self).longest_filter() }$/;"	f
longest_filter	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn longest_filter(&self) -> bool;$/;"	f
longest_filter	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn longest_filter(&self) -> bool { self.s.long.is_some() }$/;"	f
longest_filter	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn longest_filter(&self) -> bool { true }$/;"	f
longest_filter	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn longest_filter(&self) -> bool { true }$/;"	f
longs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! longs {$/;"	d
lookahead1	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn lookahead1(self) -> Lookahead1<'a> {$/;"	f
lparen	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn lparen() {$/;"	f
lparen	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn lparen(mut self) -> Option<Self> {$/;"	f
main	/home/sunfish/WASI/tools/witx/src/main.rs	/^pub fn main() {$/;"	f
map	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/context.rs	/^        pub fn map<F, T>(self, op: F) -> Context<T>$/;"	f
max_term_width	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn max_term_width(mut self, w: usize) -> Self {$/;"	f
max_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn max_vals(&self) -> Option<u64> { None }$/;"	f
max_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn max_vals(&self) -> Option<u64> { (*self).max_vals() }$/;"	f
max_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn max_vals(&self) -> Option<u64>;$/;"	f
max_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn max_vals(&self) -> Option<u64> { None }$/;"	f
max_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn max_vals(&self) -> Option<u64> { self.v.max_vals }$/;"	f
max_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn max_vals(&self) -> Option<u64> { self.v.max_vals }$/;"	f
max_values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn max_values(mut self, qty: u64) -> Self {$/;"	f
methods_seem_to_work	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    fn methods_seem_to_work() {$/;"	f
methods_seem_to_work	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    fn methods_seem_to_work() {$/;"	f
min_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn min_vals(&self) -> Option<u64> { None }$/;"	f
min_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn min_vals(&self) -> Option<u64> { (*self).min_vals() }$/;"	f
min_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn min_vals(&self) -> Option<u64>;$/;"	f
min_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn min_vals(&self) -> Option<u64> { None }$/;"	f
min_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn min_vals(&self) -> Option<u64> { self.v.min_vals }$/;"	f
min_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn min_vals(&self) -> Option<u64> { self.v.min_vals }$/;"	f
min_values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn min_values(mut self, qty: u64) -> Self {$/;"	f
missing_required_argument	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn missing_required_argument<R, U>(required: R, usage: U, color: ColorWhen) -> Self$/;"	f
missing_required_error	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^    fn missing_required_error(&self, matcher: &ArgMatcher, extra: Option<&str>) -> ClapResult<()> {$/;"	f
missing_subcommand	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn missing_subcommand<N, U>(name: N, usage: U, color: ColorWhen) -> Self$/;"	f
module	/home/sunfish/WASI/tools/witx/src/ast.rs	/^    pub fn module(&self, name: &Id) -> Option<Rc<Module>> {$/;"	f
modules	/home/sunfish/WASI/tools/witx/src/ast.rs	/^    pub fn modules<'a>(&'a self) -> impl Iterator<Item = Rc<Module>> + 'a {$/;"	f
move_imports_first	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/mod.rs	/^fn move_imports_first(fields: &mut [ModuleField<'_>]) {$/;"	f
move_types_first	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/mod.rs	/^fn move_types_first(fields: &mut [ModuleField<'_>]) {$/;"	f
multi_use	/home/sunfish/WASI/tools/witx/src/toplevel.rs	/^    fn multi_use() {$/;"	f
multiple	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn multiple(self, multi: bool) -> Self {$/;"	f
multiple	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    pub fn multiple(mut self, m: bool) -> Self {$/;"	f
multiple	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn multiple(&mut self, arg: &mut Arg) {$/;"	f
multiple_str	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    pub fn multiple_str(&self) -> &str {$/;"	f
must_char	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn must_char(&mut self) -> Result<(usize, char), Error> {$/;"	f
must_eat_char	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn must_eat_char(&mut self, wanted: char) -> Result<usize, Error> {$/;"	f
mut	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^                static mut VALUE: *const String = 0 as *const String;$/;"	c
name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn name(&self) -> &'n str {$/;"	f
name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn name<S: Into<String>>(mut self, name: S) -> Self {$/;"	f
name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn name(&self) -> &'n str { (*self).name() }$/;"	f
name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn name(&self) -> &'n str;$/;"	f
name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn name(&self) -> &'n str { self.b.name }$/;"	f
name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn name(&self) -> &'n str { self.b.name }$/;"	f
name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn name(&self) -> &'n str { self.b.name }$/;"	f
name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn name(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	f
name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/context.rs	/^        fn name(&self) -> Option<&str> {$/;"	f
name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    pub fn name(&self) -> Option<&str> {$/;"	f
name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs	/^    fn name(&self) -> Option<&str> {$/;"	f
name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    fn name(&self) -> Option<&str> {$/;"	f
name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^    pub fn name(&self) -> &'a str {$/;"	f
name_end	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^fn name_end(b: u8) -> bool { b != b']' && b != b'>' }$/;"	f
name_no_brackets	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    pub fn name_no_brackets(&self) -> Cow<str> {$/;"	f
needs_flags_tag	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/usage.rs	/^fn needs_flags_tag(p: &Parser) -> bool {$/;"	f
needs_more_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn needs_more_vals<'b, A>(&self, o: &A) -> bool$/;"	f
never_enabled_if_failure_is_set_to_no	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs	/^    fn never_enabled_if_failure_is_set_to_no() {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    pub fn new($/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/meta.rs	/^    pub fn new() -> Self { Default::default() }$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn new<S: Into<String>>(n: S) -> Self {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^    pub fn new() -> Self { AppFlags::default() }$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^    pub fn new(p: &'z mut Parser<'a, 'b>) -> Self { Validator(p) }$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/base.rs	/^    pub fn new(name: &'n str) -> Self {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    pub fn new(name: &'n str) -> Self {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    pub fn new(name: &'n str) -> Self {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    pub fn new(name: &'n str, idx: u64) -> Self {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn new() -> Self { ArgMatcher::default() }$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/matched_arg.rs	/^    pub fn new() -> Self { MatchedArg::default() }$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^    pub fn new() -> Self { ArgFlags::default() }$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/bash.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self { BashGen { p: p } }$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/elvish.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self { ElvishGen { p: p } }$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/fish.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self { FishGen { p: p } }$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/mod.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self { ComplGen { p: p } }$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/powershell.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self { PowerShellGen { p: p } }$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/zsh.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^    pub fn new(option: ColorizerOption) -> Colorizer {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^        pub fn new() -> Self {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn new(usage: &'a str) -> Self {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs	/^        pub fn new() -> Backtrace {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/context.rs	/^        pub fn new(context: D) -> Context<D> {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/sync_failure.rs	/^    pub fn new(err: E) -> Self {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    pub fn new(input: &str) -> Lexer<'_> {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lib.rs	/^    fn new(content: &str, span: Span) -> Text {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lib.rs	/^    fn new(span: Span, message: String) -> Error {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn new(input: &str) -> Result<ParseBuffer<'_>> {$/;"	f
new	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^    fn new(resolver: &'b Resolver<'a>, span: Span) -> ExprResolver<'a, 'b> {$/;"	f
new	/home/sunfish/WASI/tools/witx/src/ast.rs	/^    pub fn new<S: AsRef<str>>(s: S) -> Self {$/;"	f
new	/home/sunfish/WASI/tools/witx/src/io.rs	/^    pub fn new(strings: &[(&str, &str)]) -> Self {$/;"	f
new	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    fn new() -> Self {$/;"	f
new	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    fn new(doc: &'a DocValidationScope<'a>) -> Self {$/;"	f
new	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    pub fn new() -> Self {$/;"	f
next	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    fn next(&mut self) -> Option<&'a OsStr> { self.iter.next() }$/;"	f
next	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    fn next(&mut self) -> Option<&'a str> { self.iter.next() }$/;"	f
next	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    fn next(&mut self) -> Option<usize> { self.iter.next() }$/;"	f
next	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^        fn next(&mut self) -> Option<Self::Item> { self.inner.next().map(|(k, v)| (*k, v)) }$/;"	f
next	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn next(&mut self) -> Option<&'a OsStr> {$/;"	f
next	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    fn next(&mut self) -> Option<&'f Fail> {$/;"	f
next	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    fn next_back(&mut self) -> Option<&'a OsStr> { self.iter.next_back() }$/;"	f
next_back	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    fn next_back(&mut self) -> Option<&'a str> { self.iter.next_back() }$/;"	f
next_back	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    fn next_back(&mut self) -> Option<usize> { self.iter.next_back() }$/;"	f
next_back	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^        fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_line_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn next_line_help(mut self, nlh: bool) -> Self {$/;"	f
nonascii	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn nonascii() {$/;"	f
none	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^    pub fn none<T>(&self, msg: T) -> Format<T>$/;"	f
ns	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^    fn ns(&self, ns: Ns) -> &Namespace<'a> {$/;"	f
ns_mut	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^    fn ns_mut(&mut self, ns: Ns) -> &mut Namespace<'a> {$/;"	f
num_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn num_vals(&self) -> Option<u64> { None }$/;"	f
num_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn num_vals(&self) -> Option<u64> { (*self).num_vals() }$/;"	f
num_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn num_vals(&self) -> Option<u64>;$/;"	f
num_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn num_vals(&self) -> Option<u64> { None }$/;"	f
num_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn num_vals(&self) -> Option<u64> { self.v.num_vals }$/;"	f
num_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn num_vals(&self) -> Option<u64> { self.v.num_vals }$/;"	f
number	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn number(&self, src: &'a str) -> Option<Token<'a>> {$/;"	f
number_of_values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn number_of_values(mut self, qty: u64) -> Self {$/;"	f
occurrences_of	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    pub fn occurrences_of<S: AsRef<str>>(&self, name: S) -> u64 {$/;"	f
one_use	/home/sunfish/WASI/tools/witx/src/toplevel.rs	/^    fn one_use() {$/;"	f
optbuilder_display1	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn optbuilder_display1() {$/;"	f
optbuilder_display2	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn optbuilder_display2() {$/;"	f
optbuilder_display3	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn optbuilder_display3() {$/;"	f
optbuilder_display_multiple_aliases	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn optbuilder_display_multiple_aliases() {$/;"	f
optbuilder_display_single_alias	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn optbuilder_display_single_alias() {$/;"	f
option_details_for_path	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/bash.rs	/^    fn option_details_for_path(&self, path: &str) -> String {$/;"	f
opts	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn opts(&self) -> Iter<OptBuilder<'a, 'b>> { self.opts.iter() }$/;"	f
overrides	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn overrides(&self) -> Option<&[&'e str]> { None }$/;"	f
overrides	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn overrides(&self) -> Option<&[&'e str]> { (*self).overrides() }$/;"	f
overrides	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn overrides(&self) -> Option<&[&'e str]>;$/;"	f
overrides	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn overrides(&self) -> Option<&[&'e str]> { self.b.overrides.as_ref().map(|o| &o[..]) }$/;"	f
overrides	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn overrides(&self) -> Option<&[&'e str]> { self.b.overrides.as_ref().map(|o| &o[..]) }$/;"	f
overrides	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn overrides(&self) -> Option<&[&'e str]> { self.b.overrides.as_ref().map(|o| &o[..]) }$/;"	f
overrides_with	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn overrides_with(mut self, name: &'a str) -> Self {$/;"	f
overrides_with_all	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn overrides_with_all(mut self, names: &[&'a str]) -> Self {$/;"	f
page_size	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/expand.rs	/^fn page_size() -> u32 {$/;"	f
parens	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn parens<T>(self, f: impl FnOnce(Parser<'a>) -> Result<T>) -> Result<T> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/lib.rs	/^        fn parse() -> Self { Self::from_argmatches(Self::into_app().get_matches()) }$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    pub fn parse(mut self) -> Arg<'a, 'a> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/export.rs	/^    fn parse(parser: Parser<'a>) -> Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^            fn parse(parser: Parser<'a>) -> Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^    fn parse(parser: Parser<'_>, default_align: u32) -> Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^    fn parse(parser: Parser<'a>) -> Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/func.rs	/^    fn parse(parser: Parser<'a>) -> Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/global.rs	/^    fn parse(parser: Parser<'a>) -> Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/import.rs	/^    fn parse(parser: Parser<'a>) -> Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/memory.rs	/^    fn parse(parser: Parser<'a>) -> Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/mod.rs	/^            fn parse(parser: $crate::parser::Parser<'a>) -> $crate::parser::Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/module.rs	/^    fn parse(parser: Parser<'a>) -> Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/table.rs	/^    fn parse(parser: Parser<'a>) -> Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^            fn parse(parser: Parser<'a>) -> Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^    fn parse(parser: Parser<'_>) -> Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^    fn parse(parser: Parser<'a>) -> Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/types.rs	/^    fn parse(parser: Parser<'a>) -> Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/wast.rs	/^    fn parse(parser: Parser<'a>) -> Result<Self> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    pub fn parse(&mut self) -> Result<Option<Source<'a>>, Error> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lib.rs	/^    fn parse(span: Span, content: &str, message: String) -> Error {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    fn parse(parser: Parser<'a>) -> Result<Option<T>> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    fn parse(parser: Parser<'a>) -> Result<Self>;$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn parse<T: Parse<'a>>(self) -> Result<T> {$/;"	f
parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^pub fn parse<'a, T: Parse<'a>>(buf: &'a ParseBuffer<'a>) -> Result<T> {$/;"	f
parse	/home/sunfish/WASI/tools/witx/src/lib.rs	/^pub fn parse(source: &str) -> Result<Document, WitxError> {$/;"	f
parse	/home/sunfish/WASI/tools/witx/src/parser.rs	/^    fn parse(parser: Parser<'_>) -> Result<Self> {$/;"	f
parse	/home/sunfish/WASI/tools/witx/src/parser.rs	/^    fn parse(parser: Parser<'a>) -> Result<Self> {$/;"	f
parse_allow_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/types.rs	/^    fn parse_allow_names(parser: Parser<'a>, allow_names: bool) -> Result<Self> {$/;"	f
parse_field	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^        fn parse_field(name: &str, parser: Parser<'_>) -> Result<Option<u32>> {$/;"	f
parse_file	/home/sunfish/WASI/tools/witx/src/toplevel.rs	/^fn parse_file($/;"	f
parse_flag	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn parse_flag($/;"	f
parse_folded_instrs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^fn parse_folded_instrs<'a>($/;"	f
parse_from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/lib.rs	/^        fn parse_from<I, T>(argv: I) -> Self$/;"	f
parse_help_subcommand	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn parse_help_subcommand<I, T>(&self, it: &mut I) -> ClapResult<ParseResult<'a>>$/;"	f
parse_long_arg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn parse_long_arg<I, T>($/;"	f
parse_no_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/types.rs	/^    pub fn parse_no_names(parser: Parser<'a>) -> Result<Self> {$/;"	f
parse_opt	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn parse_opt($/;"	f
parse_short_arg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn parse_short_arg($/;"	f
parse_subcommand	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn parse_subcommand<I, T>($/;"	f
parse_witx	/home/sunfish/WASI/tools/witx/src/toplevel.rs	/^pub fn parse_witx(i: impl AsRef<Path>) -> Result<Document, WitxError> {$/;"	f
parse_witx_with	/home/sunfish/WASI/tools/witx/src/toplevel.rs	/^pub fn parse_witx_with(i: impl AsRef<Path>, witxio: impl WitxIo) -> Result<Document, WitxError> {$/;"	f
parser	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    fn parser(&self) -> Parser<'_> {$/;"	f
parser_of	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/zsh.rs	/^fn parser_of<'a, 'b>(p: &'b Parser<'a, 'b>, sc: &str) -> &'b Parser<'a, 'b> {$/;"	f
pass_by_reference	/home/sunfish/WASI/tools/witx/src/coretypes.rs	/^    pub fn pass_by_reference(&self) -> Vec<CoreParamType> {$/;"	f
pass_by_value	/home/sunfish/WASI/tools/witx/src/coretypes.rs	/^    pub fn pass_by_value(&self) -> Option<CoreParamType> {$/;"	f
passed_by	/home/sunfish/WASI/tools/witx/src/coretypes.rs	/^    pub fn passed_by(&self) -> DatatypePassedBy {$/;"	f
peek	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/mod.rs	/^            fn peek(cursor: $crate::parser::Cursor<'_>) -> bool {$/;"	f
peek	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^            fn peek(cursor: Cursor<'_>) -> bool {$/;"	f
peek	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^    fn peek(cursor: Cursor<'_>) -> bool {$/;"	f
peek	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/types.rs	/^    fn peek(cursor: Cursor<'_>) -> bool {$/;"	f
peek	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/wast.rs	/^    fn peek(cursor: Cursor<'_>) -> bool {$/;"	f
peek	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    fn peek(cursor: Cursor<'_>) -> bool;$/;"	f
peek	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn peek<T: Peek>(&mut self) -> bool {$/;"	f
peek	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn peek<T: Peek>(self) -> bool {$/;"	f
peek	/home/sunfish/WASI/tools/witx/src/parser.rs	/^    fn peek(cursor: Cursor<'_>) -> bool {$/;"	f
peek2	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn peek2<T: Peek>(self) -> bool {$/;"	f
pos_help_double_lit_single_quote	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn pos_help_double_lit_single_quote() {$/;"	f
pos_help_lit_single_quote	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn pos_help_lit_single_quote() {$/;"	f
pos_help_newline	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn pos_help_newline() {$/;"	f
pos_help_newline_lit_sq	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn pos_help_newline_lit_sq() {$/;"	f
pos_mult	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn pos_mult() {$/;"	f
pos_mult_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn pos_mult_help() {$/;"	f
pos_req	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn pos_req() {$/;"	f
pos_req_mult_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn pos_req_mult_help() {$/;"	f
positionals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn positionals(&self) -> map::Values<PosBuilder<'a, 'b>> { self.positionals.values() }$/;"	f
possible_subcommand	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn possible_subcommand(&self, arg_os: &OsStr) -> (bool, Option<&str>) {$/;"	f
possible_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> { None }$/;"	f
possible_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> { (*self).possible_vals() }$/;"	f
possible_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]>;$/;"	f
possible_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> { None }$/;"	f
possible_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> { self.v.possible_vals.as_ref().map(|o| &o[..]) }$/;"	f
possible_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> { self.v.possible_vals.as_ref().map(|o| &o[..]) }$/;"	f
possible_value	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn possible_value(mut self, name: &'b str) -> Self {$/;"	f
possible_values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn possible_values(mut self, names: &[&'b str]) -> Self {$/;"	f
possible_values_match	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/suggestions.rs	/^    fn possible_values_match() {$/;"	f
possible_values_nomatch	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/suggestions.rs	/^    fn possible_values_nomatch() {$/;"	f
prepend	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/tyexpand.rs	/^    fn prepend(&mut self, key: (Vec<ValType>, Vec<ValType>)) -> u32 {$/;"	f
print_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn print_help(&mut self) -> ClapResult<()> {$/;"	f
print_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn print_help(&self) -> ClapResult<()> {$/;"	f
print_long_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn print_long_help(&mut self) -> ClapResult<()> {$/;"	f
print_version	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn print_version<W: Write>(&self, w: &mut W, use_long: bool) -> ClapResult<()> {$/;"	f
process	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/expand.rs	/^    pub fn process($/;"	f
process_arg_overrides	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn process_arg_overrides<'b>(&mut self, a: Option<&AnyArg<'a, 'b>>, overrides: &mut Vec<(&'b str, &'a str)>, required: &mut Vec<&'a str>, check_all: bool) {$/;"	f
propagate_globals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn propagate_globals(&mut self) {$/;"	f
propagate_globals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn propagate_globals(&mut self, global_arg_vec: &[&'a str]) {$/;"	f
propagate_help_version	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn propagate_help_version(&mut self) {$/;"	f
propagate_settings	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn propagate_settings(&mut self) {$/;"	f
quote	/home/sunfish/WASI/tools/witx/src/render.rs	/^    fn quote(s: &str) -> SExpr {$/;"	f
raw	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn raw(self, raw: bool) -> Self {$/;"	f
register	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^    fn register(&mut self, name: Option<Id<'a>>) {$/;"	f
register	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^    pub fn register(&mut self, item: &ModuleField<'a>) {$/;"	f
register_type	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/tyexpand.rs	/^    fn register_type(&mut self, ty: &Type<'a>) {$/;"	f
remove	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn remove(&mut self, arg: &str) { self.0.args.remove(arg); }$/;"	f
remove_all	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn remove_all(&mut self, args: &[&str]) {$/;"	f
remove_overrides	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn remove_overrides(&mut self, matcher: &mut ArgMatcher) {$/;"	f
report	/home/sunfish/WASI/tools/witx/src/lib.rs	/^    pub fn report(&self) -> String {$/;"	f
report	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    pub fn report(&self) -> String {$/;"	f
report_with	/home/sunfish/WASI/tools/witx/src/lib.rs	/^    pub fn report_with(&self, witxio: &dyn WitxIo) -> String {$/;"	f
report_with	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    pub fn report_with(&self, witxio: &dyn WitxIo) -> String {$/;"	f
repr	/home/sunfish/WASI/tools/witx/src/coretypes.rs	/^    pub fn repr(&self) -> AtomType {$/;"	f
require_delimiter	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn require_delimiter(mut self, d: bool) -> Self {$/;"	f
require_equals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn require_equals(mut self, r: bool) -> Self {$/;"	f
required	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn required(&self) -> Iter<&str> { self.required.iter() }$/;"	f
required	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn required(self, r: bool) -> Self {$/;"	f
required	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    pub fn required(mut self, r: bool) -> Self {$/;"	f
required_if	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn required_if(mut self, arg: &'a str, val: &'b str) -> Self {$/;"	f
required_ifs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn required_ifs(mut self, ifs: &[(&'a str, &'b str)]) -> Self {$/;"	f
required_unless	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> { None }$/;"	f
required_unless	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> { (*self).required_unless() }$/;"	f
required_unless	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn required_unless(&self) -> Option<&[&'e str]>;$/;"	f
required_unless	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn required_unless(mut self, name: &'a str) -> Self {$/;"	f
required_unless	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> { self.b.r_unless.as_ref().map(|o| &o[..]) }$/;"	f
required_unless	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> { self.b.r_unless.as_ref().map(|o| &o[..]) }$/;"	f
required_unless	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> { self.b.r_unless.as_ref().map(|o| &o[..]) }$/;"	f
required_unless_all	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn required_unless_all(mut self, names: &[&'a str]) -> Self {$/;"	f
required_unless_one	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn required_unless_one(mut self, names: &[&'a str]) -> Self {$/;"	f
requires	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> { None }$/;"	f
requires	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> { (*self).requires() }$/;"	f
requires	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]>;$/;"	f
requires	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn requires(mut self, name: &'a str) -> Self {$/;"	f
requires	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	f
requires	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	f
requires	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	f
requires	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    pub fn requires(mut self, n: &'a str) -> Self {$/;"	f
requires_all	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn requires_all(mut self, names: &[&'a str]) -> Self {$/;"	f
requires_all	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    pub fn requires_all(mut self, ns: &[&'a str]) -> Self {$/;"	f
requires_if	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn requires_if(mut self, val: &'b str, arg: &'a str) -> Self {$/;"	f
requires_ifs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn requires_ifs(mut self, ifs: &[(&'b str, &'a str)]) -> Self {$/;"	f
reserved	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn reserved() {$/;"	f
reserved	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn reserved(mut self) -> Option<(&'a str, Self)> {$/;"	f
resolve	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/module.rs	/^    fn resolve(&mut self) -> std::result::Result<(), crate::Error> {$/;"	f
resolve	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/mod.rs	/^pub fn resolve(module: &mut Module) -> Result<(), Error> {$/;"	f
resolve	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^    fn resolve(&mut self, expr: &mut Expression<'a>) -> Result<(), Error> {$/;"	f
resolve	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^    fn resolve(&self, idx: &mut Index<'a>) -> Result<u32, Id<'a>> {$/;"	f
resolve	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^    pub fn resolve(&self, field: &mut ModuleField<'a>) -> Result<(), Error> {$/;"	f
resolve_error	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^    fn resolve_error(&self, id: Id<'a>, ns: &str) -> Error {$/;"	f
resolve_expr	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^    fn resolve_expr(&self, span: Span, expr: &mut Expression<'a>) -> Result<(), Error> {$/;"	f
resolve_idx	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^    fn resolve_idx(&self, idx: &mut Index<'a>, ns: Ns) -> Result<(), Error> {$/;"	f
resolve_instr	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^    fn resolve_instr(&mut self, instr: &mut Instruction<'a>) -> Result<(), Error> {$/;"	f
resolve_label	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^    fn resolve_label(&self, label: &mut Index<'a>) -> Result<(), Error> {$/;"	f
resolve_type_use	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/resolve/names.rs	/^    fn resolve_type_use(&self, span: Span, ty: &mut TypeUse<'a>) -> Result<u32, Error> {$/;"	f
root_cause	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^    pub fn root_cause(&self) -> &Fail {$/;"	f
root_cause	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    fn root_cause(&self) -> &Fail$/;"	f
root_cause	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^    pub fn root_cause(&self) -> &Fail {$/;"	f
root_cause	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^    pub fn root_cause(&self) -> &Fail {$/;"	f
rparen	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn rparen() {$/;"	f
rparen	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn rparen(mut self) -> Option<Self> {$/;"	f
sc_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! sc_names {$/;"	d
scope	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    pub fn scope<'a>(&'a mut self, text: &'a str, path: &'a Path) -> DocValidationScope<'a> {$/;"	f
sdebug	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^    macro_rules! sdebug {$/;"	d
sdebugln	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^    macro_rules! sdebugln {$/;"	d
section	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/binary.rs	/^    fn section<T: Encode>(id: u8, list: T, tmp: &mut Vec<u8>, dst: &mut Vec<u8>) {$/;"	f
section_list	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/binary.rs	/^    fn section_list<T: Encode>(id: u8, list: &[T], tmp: &mut Vec<u8>, dst: &mut Vec<u8>) {$/;"	f
set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn set(&mut self, _: ArgSettings) {$/;"	f
set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn set(&mut self, s: AS) { self.settings.set(s) }$/;"	f
set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn set(&mut self, ArgSettings);$/;"	f
set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn set(&mut self, _: ArgSettings) { panic!(INTERNAL_ERROR_MSG) }$/;"	f
set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn set(mut self, s: ArgSettings) -> Self {$/;"	f
set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/base.rs	/^    pub fn set(&mut self, s: ArgSettings) { self.settings.set(s); }$/;"	f
set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn set(&mut self, s: ArgSettings) { self.b.settings.set(s) }$/;"	f
set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn set(&mut self, s: ArgSettings) { self.b.settings.set(s) }$/;"	f
set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn set(&mut self, s: ArgSettings) { self.b.settings.set(s) }$/;"	f
set	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^        pub fn set(&mut self, s: $n) {$/;"	f
set_path	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lib.rs	/^    pub fn set_path(&mut self, path: &Path) {$/;"	f
set_term_width	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn set_term_width(mut self, width: usize) -> Self {$/;"	f
set_text	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lib.rs	/^    pub fn set_text(&mut self, contents: &str) {$/;"	f
setb	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn setb(&mut self, s: ArgSettings) {$/;"	f
setting	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn setting(mut self, setting: AppSettings) -> Self {$/;"	f
settings	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn settings(mut self, settings: &[AppSettings]) -> Self {$/;"	f
short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn short<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> io::Result<()> {$/;"	f
short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn short(&self) -> Option<char> { None }$/;"	f
short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn short(&self) -> Option<char> { (*self).short() }$/;"	f
short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn short(&self) -> Option<char>;$/;"	f
short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn short<S: AsRef<str>>(mut self, s: S) -> Self {$/;"	f
short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn short(&self) -> Option<char> { self.s.short }$/;"	f
short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn short(&self) -> Option<char> { self.s.short }$/;"	f
short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn short(&self) -> Option<char> { None }$/;"	f
short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn short(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	f
short_or_long	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn short_or_long(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	f
shorts	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! shorts {$/;"	d
should_show_arg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^fn should_show_arg(use_long: bool, arg: &ArgWithOrder) -> bool {$/;"	f
size_hint	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) { self.iter.size_hint() }$/;"	f
skip_undescores	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^        fn skip_undescores<'a>($/;"	f
spaces	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/elvish.rs	/^    fn spaces [n]{{$/;"	f
span	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^    pub fn span(&self) -> Span {$/;"	f
spec_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn spec_vals(&self, a: &ArgWithDisplay) -> String {$/;"	f
split	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn split(&self, b: u8) -> OsSplit {$/;"	f
split	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn split(&self, b: u8) -> OsSplit;$/;"	f
split_at	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn split_at(&self, i: usize) -> (&OsStr, &OsStr) {$/;"	f
split_at	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn split_at(&self, i: usize) -> (&OsStr, &OsStr);$/;"	f
split_at_byte	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn split_at_byte(&self, b: u8) -> (&OsStr, &OsStr);$/;"	f
split_at_byte	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn split_at_byte(&self, byte: u8) -> (&OsStr, &OsStr) {$/;"	f
src	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    pub fn src(&self) -> &'a str {$/;"	f
starts	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^        fn starts(h: &str, n: &OsStr) -> bool {$/;"	f
starts_with	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn starts_with(&self, s: &[u8]) -> bool {$/;"	f
starts_with	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn starts_with(&self, s: &[u8]) -> bool;$/;"	f
step	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn step<F, T>(self, f: F) -> Result<T>$/;"	f
stop_at	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^    fn stop_at<F>(&mut self, f: F)$/;"	f
str_width	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^fn str_width(s: &str) -> usize {$/;"	f
string	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn string(&mut self) -> Result<Cow<'a, [u8]>, Error> {$/;"	f
string	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/parser.rs	/^    pub fn string(mut self) -> Option<(&'a [u8], Self)> {$/;"	f
strings	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn strings() {$/;"	f
subcommand	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn subcommand(mut self, subcmd: App<'a, 'b>) -> Self {$/;"	f
subcommand	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn subcommand(&mut self, sc: SubCommand<'a>) { self.0.subcommand = Some(Box::new(sc)); }$/;"	f
subcommand	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    pub fn subcommand(&self) -> (&str, Option<&ArgMatches<'a>>) {$/;"	f
subcommand_details	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/bash.rs	/^    fn subcommand_details(&self) -> String {$/;"	f
subcommand_details	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/zsh.rs	/^fn subcommand_details(p: &Parser) -> String {$/;"	f
subcommand_matches	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    pub fn subcommand_matches<S: AsRef<str>>(&self, name: S) -> Option<&ArgMatches<'a>> {$/;"	f
subcommand_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn subcommand_name(&self) -> Option<&str> { self.0.subcommand_name() }$/;"	f
subcommand_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    pub fn subcommand_name(&self) -> Option<&str> {$/;"	f
subcommands	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn subcommands<I>(mut self, subcmds: I) -> Self$/;"	f
subcommands	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn subcommands(&self) -> Iter<App> { self.subcommands.iter() }$/;"	f
subcommands_of	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/mod.rs	/^pub fn subcommands_of(p: &Parser) -> Vec<(String, String)> {$/;"	f
subcommands_of	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/zsh.rs	/^fn subcommands_of(p: &Parser) -> String {$/;"	f
suffix_enum	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/suggestions.rs	/^    fn suffix_enum() {$/;"	f
suffix_long	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/suggestions.rs	/^    fn suffix_long() {$/;"	f
takes_value	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn takes_value(&self) -> bool { true }$/;"	f
takes_value	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn takes_value(&self) -> bool { (*self).takes_value() }$/;"	f
takes_value	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn takes_value(&self) -> bool;$/;"	f
takes_value	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn takes_value(self, tv: bool) -> Self {$/;"	f
takes_value	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn takes_value(&self) -> bool { false }$/;"	f
takes_value	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn takes_value(&self) -> bool { true }$/;"	f
takes_value	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn takes_value(&self) -> bool { true }$/;"	f
template	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn template<S: Into<&'b str>>(mut self, s: S) -> Self {$/;"	f
term_size	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^mod term_size {$/;"	m
test	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^mod test {$/;"	m
test	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^mod test {$/;"	m
test	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^mod test {$/;"	m
test	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^mod test {$/;"	m
test	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^mod test {$/;"	m
test	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^mod test {$/;"	m
test	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/settings.rs	/^mod test {$/;"	m
test	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^mod test {$/;"	m
test	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/suggestions.rs	/^mod test {$/;"	m
test	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^mod test {$/;"	m
test	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl_small.rs	/^mod test {$/;"	m
test	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs	/^mod test {$/;"	m
test	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/small_error.rs	/^mod test {$/;"	m
test	/home/sunfish/WASI/tools/witx/src/toplevel.rs	/^mod test {$/;"	m
test_debug	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    fn test_debug() {$/;"	f
test_default_indices	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    fn test_default_indices() {$/;"	f
test_default_indices_with_shorter_lifetime	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    fn test_default_indices_with_shorter_lifetime() {$/;"	f
test_default_osvalues	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    fn test_default_osvalues() {$/;"	f
test_default_osvalues_with_shorter_lifetime	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    fn test_default_osvalues_with_shorter_lifetime() {$/;"	f
test_default_values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    fn test_default_values() {$/;"	f
test_default_values_with_shorter_lifetime	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    fn test_default_values_with_shorter_lifetime() {$/;"	f
test_enabled	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs	/^    macro_rules! test_enabled {$/;"	d
test_from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    fn test_from() {$/;"	f
test_map	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/context.rs	/^    fn test_map() {$/;"	f
test_yaml	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    fn test_yaml() {$/;"	f
tests	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^mod tests {$/;"	m
tests	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs	/^mod tests {$/;"	m
tests	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^mod tests {$/;"	m
tests	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^mod tests {$/;"	m
to_hex	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/token.rs	/^fn to_hex(c: char) -> u8 {$/;"	f
to_hex	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^fn to_hex(c: char) -> u8 {$/;"	f
to_le_bytes	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/ast/expr.rs	/^    pub fn to_le_bytes(&self) -> [u8; 16] {$/;"	f
to_sexpr	/home/sunfish/WASI/tools/witx/src/render.rs	/^    fn to_sexpr(&self) -> SExpr {$/;"	f
to_sexpr	/home/sunfish/WASI/tools/witx/src/render.rs	/^    fn to_sexpr(&self) -> SExpr;$/;"	f
to_str_slice	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^            fn to_str_slice(o: &OsString) -> &str { o.to_str().expect(INVALID_UTF8) }$/;"	f
to_str_slice	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^        fn to_str_slice(_: &OsString) -> &OsStr { unreachable!() };$/;"	f
to_str_slice	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^        fn to_str_slice(_: &OsString) -> &str { unreachable!() };$/;"	f
to_str_slice	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^        fn to_str_slice(o: &OsString) -> &OsStr { &*o }$/;"	f
to_usize	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^            fn to_usize(i: &usize) -> usize { *i }$/;"	f
to_usize	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^        fn to_usize(_: &usize) -> usize { unreachable!() };$/;"	f
token	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/usage_parser.rs	/^fn token(b: u8) -> bool { b != b'\\'' && b != b'.' && b != b'<' && b != b'[' && b != b'-' }$/;"	f
token	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn token(&mut self) -> Result<Option<Token<'a>>, Error> {$/;"	f
too_few_values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn too_few_values<U>($/;"	f
too_many_values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn too_many_values<V, U>(val: V, arg: &AnyArg, usage: U, color: ColorWhen) -> Self$/;"	f
trim_left_matches	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn trim_left_matches(&self, b: u8) -> &OsStr;$/;"	f
trim_left_matches	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/osstringext.rs	/^    fn trim_left_matches(&self, byte: u8) -> &OsStr {$/;"	f
try_from_argmatches	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/lib.rs	/^        fn try_from_argmatches<'a>(matches: clap::ArgMatches<'a>) -> Result<Self, clap::Error>;$/;"	f
try_parse	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/lib.rs	/^        fn try_parse() -> Result<Self, clap::Error> {$/;"	f
try_parse_from	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/lib.rs	/^        fn try_parse_from<I, T>(argv: I) -> Result<Self, clap::Error>$/;"	f
unexpected_multiple_usage	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn unexpected_multiple_usage<U>(arg: &AnyArg, usage: U, color: ColorWhen) -> Self$/;"	f
unknown_argument	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn unknown_argument<A, U>(arg: A, did_you_mean: &str, usage: U, color: ColorWhen) -> Self$/;"	f
unrecognized_subcommand	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn unrecognized_subcommand<S, N>(subcmd: S, name: N, color: ColorWhen) -> Self$/;"	f
unset	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn unset(&mut self, s: AS) { self.settings.unset(s) }$/;"	f
unset	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn unset(mut self, s: ArgSettings) -> Self {$/;"	f
unset	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/base.rs	/^    pub fn unset(&mut self, s: ArgSettings) { self.settings.unset(s); }$/;"	f
unset	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^        pub fn unset(&mut self, s: $n) {$/;"	f
unset_setting	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn unset_setting(mut self, setting: AppSettings) -> Self {$/;"	f
unset_settings	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn unset_settings(mut self, settings: &[AppSettings]) -> Self {$/;"	f
unsetb	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn unsetb(&mut self, s: ArgSettings) {$/;"	f
usage	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn usage<S: Into<&'b str>>(mut self, usage: S) -> Self {$/;"	f
usage	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matcher.rs	/^    pub fn usage(&mut self, usage: String) { self.0.usage = Some(usage); }$/;"	f
usage	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    pub fn usage(&self) -> &str { self.usage.as_ref().map_or("", |u| &u[..]) }$/;"	f
use_delimiter	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn use_delimiter(mut self, d: bool) -> Self {$/;"	f
use_invalid	/home/sunfish/WASI/tools/witx/src/toplevel.rs	/^    fn use_invalid() {$/;"	f
use_long_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    fn use_long_help(&self) -> bool {$/;"	f
use_not_found	/home/sunfish/WASI/tools/witx/src/toplevel.rs	/^    fn use_not_found() {$/;"	f
use_stderr	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn use_stderr(&self) -> bool {$/;"	f
val	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn val<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> Result<String, io::Error> {$/;"	f
val	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    pub fn val(&self) -> &FloatVal<'a> {$/;"	f
val	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    pub fn val(&self) -> (&str, u32) {$/;"	f
val_delim	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn val_delim(&self) -> Option<char> { None }$/;"	f
val_delim	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn val_delim(&self) -> Option<char> { (*self).val_delim() }$/;"	f
val_delim	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn val_delim(&self) -> Option<char>;$/;"	f
val_delim	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn val_delim(&self) -> Option<char> { None }$/;"	f
val_delim	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn val_delim(&self) -> Option<char> { self.v.val_delim }$/;"	f
val_delim	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn val_delim(&self) -> Option<char> { self.v.val_delim }$/;"	f
val_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> { None }$/;"	f
val_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> { (*self).val_names() }$/;"	f
val_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>>;$/;"	f
val_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> { None }$/;"	f
val_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> { self.v.val_names.as_ref() }$/;"	f
val_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> { self.v.val_names.as_ref() }$/;"	f
val_terminator	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn val_terminator(&self) -> Option<&'e str> { None }$/;"	f
val_terminator	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn val_terminator(&self) -> Option<&'e str> { (*self).val_terminator() }$/;"	f
val_terminator	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn val_terminator(&self) -> Option<&'e str>;$/;"	f
val_terminator	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn val_terminator(&self) -> Option<&'e str> { None }$/;"	f
val_terminator	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn val_terminator(&self) -> Option<&'e str> { self.v.terminator }$/;"	f
val_terminator	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn val_terminator(&self) -> Option<&'e str> { self.v.terminator }$/;"	f
validate	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^    pub fn validate($/;"	f
validate_arg_conflicts	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^    fn validate_arg_conflicts(&self, a: &AnyArg, matcher: &ArgMatcher) -> Option<bool> {$/;"	f
validate_arg_num_occurs	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^    fn validate_arg_num_occurs<A>($/;"	f
validate_arg_num_vals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^    fn validate_arg_num_vals<A>($/;"	f
validate_arg_requires	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^    fn validate_arg_requires<A>($/;"	f
validate_arg_values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^    fn validate_arg_values<A>($/;"	f
validate_blacklist	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^    fn validate_blacklist(&self, matcher: &mut ArgMatcher) -> ClapResult<()> {$/;"	f
validate_datatype_ident	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    fn validate_datatype_ident($/;"	f
validate_decl	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    fn validate_decl($/;"	f
validate_decl	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    pub fn validate_decl(&mut self, decl: &DeclSyntax) -> Result<Definition, ValidationError> {$/;"	f
validate_enum	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    fn validate_enum($/;"	f
validate_flags	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    fn validate_flags($/;"	f
validate_int_repr	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    fn validate_int_repr($/;"	f
validate_matched_args	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^    fn validate_matched_args(&self, matcher: &mut ArgMatcher<'a>) -> ClapResult<()> {$/;"	f
validate_required	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^    fn validate_required(&mut self, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	f
validate_required_unless	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/validator.rs	/^    fn validate_required_unless(&self, a: &AnyArg, matcher: &ArgMatcher) -> Option<bool> {$/;"	f
validate_struct	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    fn validate_struct($/;"	f
validate_union	/home/sunfish/WASI/tools/witx/src/validate.rs	/^    fn validate_union($/;"	f
validator	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> { None }$/;"	f
validator	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> Result<(), String>>> { (*self).validator() }$/;"	f
validator	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> Result<(), String>>>;$/;"	f
validator	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn validator<F>(mut self, f: F) -> Self$/;"	f
validator	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> { None }$/;"	f
validator	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {$/;"	f
validator	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {$/;"	f
validator_os	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> { None }$/;"	f
validator_os	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> Result<(), OsString>>> { (*self).validator_os() }$/;"	f
validator_os	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/any_arg.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> Result<(), OsString>>>;$/;"	f
validator_os	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn validator_os<F>(mut self, f: F) -> Self$/;"	f
validator_os	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/flag.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> { None }$/;"	f
validator_os	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/option.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {$/;"	f
validator_os	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_builder/positional.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {$/;"	f
vals_for	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/bash.rs	/^    fn vals_for(&self, o: &OptBuilder) -> String {$/;"	f
value_delimiter	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn value_delimiter(mut self, d: &str) -> Self {$/;"	f
value_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn value_name(mut self, name: &'b str) -> Self {$/;"	f
value_names	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn value_names(mut self, names: &[&'b str]) -> Self {$/;"	f
value_of	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    pub fn value_of<S: AsRef<str>>(&self, name: S) -> Option<&str> {$/;"	f
value_of_lossy	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    pub fn value_of_lossy<S: AsRef<str>>(&'a self, name: S) -> Option<Cow<'a, str>> {$/;"	f
value_of_os	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    pub fn value_of_os<S: AsRef<str>>(&self, name: S) -> Option<&OsStr> {$/;"	f
value_t	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! value_t {$/;"	d
value_t_or_exit	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! value_t_or_exit {$/;"	d
value_terminator	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn value_terminator(mut self, term: &'b str) -> Self {$/;"	f
value_validation	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn value_validation(arg: Option<&AnyArg>, err: String, color: ColorWhen) -> Self$/;"	f
value_validation_auto	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn value_validation_auto(err: String) -> Self {$/;"	f
values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^        pub fn values(&self) -> Values<V> { self.inner.values() }$/;"	f
values_of	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    pub fn values_of<S: AsRef<str>>(&'a self, name: S) -> Option<Values<'a>> {$/;"	f
values_of_lossy	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    pub fn values_of_lossy<S: AsRef<str>>(&'a self, name: S) -> Option<Vec<String>> {$/;"	f
values_of_os	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg_matches.rs	/^    pub fn values_of_os<S: AsRef<str>>(&'a self, name: S) -> Option<OsValues<'a>> {$/;"	f
values_t	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! values_t {$/;"	d
values_t_or_exit	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! values_t_or_exit {$/;"	d
variants	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/shell.rs	/^    pub fn variants() -> [&'static str; 5] { ["zsh", "bash", "fish", "powershell", "elvish"] }$/;"	f
variants	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^            pub fn variants() -> [&'static str; $crate::_clap_count_exprs!($(stringify!($v)),+)] {$/;"	f
vec_map	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/map.rs	/^mod vec_map {$/;"	m
vec_or_str	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^        macro_rules! vec_or_str {$/;"	d
verify_positionals	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn verify_positionals(&self) -> bool {$/;"	f
version	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn version<S: Into<&'b str>>(mut self, ver: S) -> Self {$/;"	f
version_message	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn version_message<S: Into<&'a str>>(mut self, s: S) -> Self {$/;"	f
version_short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn version_short<S: AsRef<str>>(mut self, s: S) -> Self {$/;"	f
version_short	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn version_short(&mut self, s: &str) {$/;"	f
visible_alias	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn visible_alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	f
visible_alias	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn visible_alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	f
visible_aliases	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn visible_aliases(mut self, names: &[&'b str]) -> Self {$/;"	f
visible_aliases	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn visible_aliases(mut self, names: &[&'b str]) -> Self {$/;"	f
w	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/macros.rs	/^macro_rules! w {$/;"	d
warning	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/fmt.rs	/^    pub fn warning<T>(&self, msg: T) -> Format<T>$/;"	f
with_backtrace	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs	/^macro_rules! with_backtrace { ($($i:item)*) => ($(#[cfg(all(feature = "backtrace", feature = "std"))]$i)*) }$/;"	d
with_context	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/result_ext.rs	/^        fn with_context<F, D>(self, f: F) -> Result<T, Context<D>> where$/;"	f
with_context	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/result_ext.rs	/^    fn with_context<F, D>(self, f: F) -> Result<T, Context<D>>$/;"	f
with_defaults	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn with_defaults<S: Into<String>>(n: S) -> Self {$/;"	f
with_description	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn with_description(description: &str, kind: ErrorKind) -> Self {$/;"	f
with_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/meta.rs	/^    pub fn with_name(s: String) -> Self {$/;"	f
with_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn with_name(n: String) -> Self {$/;"	f
with_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/arg.rs	/^    pub fn with_name(n: &'a str) -> Self {$/;"	f
with_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/group.rs	/^    pub fn with_name(n: &'a str) -> Self {$/;"	f
with_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/subcommand.rs	/^    pub fn with_name<'b>(name: &str) -> App<'a, 'b> { App::new(name) }$/;"	f
with_std	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^macro_rules! with_std { ($($i:item)*) => ($(#[cfg(feature = "std")]$i)*) }$/;"	d
without_backtrace	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs	/^macro_rules! without_backtrace { ($($i:item)*) => ($(#[cfg(not(all(feature = "backtrace", feature = "std")))]$i)*) }$/;"	d
without_std	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/lib.rs	/^macro_rules! without_std { ($($i:item)*) => ($(#[cfg(not(feature = "std"))]$i)*) }$/;"	d
wlnerr	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! wlnerr($/;"	d
word	/home/sunfish/WASI/tools/witx/src/render.rs	/^    fn word(s: &str) -> SExpr {$/;"	f
wrap_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^fn wrap_help(help: &str, avail_chars: usize) -> String {$/;"	f
wrap_help_last_word	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn wrap_help_last_word() {$/;"	f
write_all_args	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    pub fn write_all_args(&mut self, parser: &Parser) -> ClapResult<()> {$/;"	f
write_app_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    pub fn write_app_help(w: &'a mut Write, app: &App, use_long: bool) -> ClapResult<()> {$/;"	f
write_arg	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn write_arg<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> io::Result<()> {$/;"	f
write_args	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn write_args<'b: 'd, 'c: 'd, 'd, I: 'd>(&mut self, args: I) -> io::Result<()>$/;"	f
write_args_unsorted	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn write_args_unsorted<'b: 'd, 'c: 'd, 'd, I: 'd>(&mut self, args: I) -> io::Result<()>$/;"	f
write_before_after_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn write_before_after_help(&mut self, h: &str) -> io::Result<()> {$/;"	f
write_bin_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn write_bin_name(&mut self, parser: &Parser) -> io::Result<()> {$/;"	f
write_default_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    pub fn write_default_help(&mut self, parser: &Parser) -> ClapResult<()> {$/;"	f
write_flags_of	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/zsh.rs	/^fn write_flags_of(p: &Parser) -> String {$/;"	f
write_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    pub fn write_help(&mut self, parser: &Parser) -> ClapResult<()> {$/;"	f
write_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn write_help<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn write_help<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_help_err	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn write_help_err<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_long_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn write_long_help<W: Write>(&mut self, w: &mut W) -> ClapResult<()> {$/;"	f
write_long_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn write_long_help<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_long_version	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn write_long_version<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_name	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^        macro_rules! write_name {$/;"	d
write_nspaces	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/macros.rs	/^macro_rules! write_nspaces {$/;"	d
write_opts_of	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/zsh.rs	/^fn write_opts_of(p: &Parser) -> String {$/;"	f
write_parser_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    pub fn write_parser_help(w: &'a mut Write, parser: &Parser, use_long: bool) -> ClapResult<()> {$/;"	f
write_parser_help_to_stderr	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    pub fn write_parser_help_to_stderr(w: &'a mut Write, parser: &Parser) -> ClapResult<()> {$/;"	f
write_positionals_of	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/completions/zsh.rs	/^fn write_positionals_of(p: &Parser) -> String {$/;"	f
write_subcommands	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn write_subcommands(&mut self, parser: &Parser) -> io::Result<()> {$/;"	f
write_templated_help	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn write_templated_help(&mut self, parser: &Parser, template: &str) -> ClapResult<()> {$/;"	f
write_thing	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^        macro_rules! write_thing {$/;"	d
write_to	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn write_to<W: Write>(&self, w: &mut W) -> io::Result<()> { write!(w, "{}", self.message) }$/;"	f
write_version	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/help.rs	/^    fn write_version(&mut self, parser: &Parser) -> io::Result<()> {$/;"	f
write_version	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^    pub fn write_version<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_version	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/parser.rs	/^    pub fn write_version<W: Write>(&self, w: &mut W, use_long: bool) -> io::Result<()> {$/;"	f
wrong_number_of_values	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/errors.rs	/^    pub fn wrong_number_of_values<S, U>($/;"	f
ws	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn ws(&mut self) -> Option<&'a str> {$/;"	f
ws_smoke	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-3.0.1/src/lexer.rs	/^    fn ws_smoke() {$/;"	f
yaml_opt_str	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/macros.rs	/^macro_rules! yaml_opt_str {$/;"	d
yaml_str	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/mod.rs	/^        macro_rules! yaml_str {$/;"	d
yaml_str	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/macros.rs	/^macro_rules! yaml_str {$/;"	d
yaml_to_bool	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/macros.rs	/^macro_rules! yaml_to_bool {$/;"	d
yaml_to_str	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/macros.rs	/^macro_rules! yaml_to_str {$/;"	d
yaml_to_u64	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/macros.rs	/^macro_rules! yaml_to_u64 {$/;"	d
yaml_to_usize	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/macros.rs	/^macro_rules! yaml_to_usize {$/;"	d
yaml_tuple2	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/macros.rs	/^macro_rules! yaml_tuple2 {$/;"	d
yaml_tuple3	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/macros.rs	/^macro_rules! yaml_tuple3 {$/;"	d
yaml_vec_or_str	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/args/macros.rs	/^macro_rules! yaml_vec_or_str {$/;"	d
zeroed	/home/sunfish/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/app/settings.rs	/^    pub fn zeroed() -> Self { AppFlags(Flags::empty()) }$/;"	f
